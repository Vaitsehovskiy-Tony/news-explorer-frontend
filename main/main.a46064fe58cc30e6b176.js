!function(Q){var F={};function B(U){if(F[U])return F[U].exports;var s=F[U]={i:U,l:!1,exports:{}};return Q[U].call(s.exports,s,s.exports,B),s.l=!0,s.exports}B.m=Q,B.c=F,B.d=function(Q,F,U){B.o(Q,F)||Object.defineProperty(Q,F,{enumerable:!0,get:U})},B.r=function(Q){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(Q,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(Q,"__esModule",{value:!0})},B.t=function(Q,F){if(1&F&&(Q=B(Q)),8&F)return Q;if(4&F&&"object"==typeof Q&&Q&&Q.__esModule)return Q;var U=Object.create(null);if(B.r(U),Object.defineProperty(U,"default",{enumerable:!0,value:Q}),2&F&&"string"!=typeof Q)for(var s in Q)B.d(U,s,function(F){return Q[F]}.bind(null,s));return U},B.n=function(Q){var F=Q&&Q.__esModule?function(){return Q.default}:function(){return Q};return B.d(F,"a",F),F},B.o=function(Q,F){return Object.prototype.hasOwnProperty.call(Q,F)},B.p="",B(B.s=7)}([function(module,__webpack_exports__,__webpack_require__){"use strict";eval("/* harmony default export */ __webpack_exports__[\"a\"] = ({\n  // может стоит разбить на 2 - селектор и вэлью, или по-другому\n  searchSelector: document.querySelector('.search-form'),\n  cardTemplateMain: '#cardTemplateMain',\n  cardTemplateSaved: '#cardTemplateSaved',\n  popupFormSignin: document.querySelector('.popup__signin'),\n  popupFormSignup: document.querySelector('.popup__signup'),\n  popupAltButton: '.popup__alternative-button',\n  popupFormSignupOk: document.querySelector('.popup__signup-ok'),\n  search: {\n    results: document.querySelector('.results'),\n    resultsSearching: document.querySelector('.results__loading'),\n    resultsNothing: document.querySelector('.no-results')\n  },\n  header: {\n    headerSaved: '.header-navbar__saved',\n    headerAuth: '.header-navbar__auth',\n    headerName: '.header-navbar__name',\n    headerNameButton: '.header-navbar__menu-item-name',\n    headrbttnLogin: document.querySelector('.header-navbar__menu-item_auth'),\n    headrbttnMobLogin: document.querySelector('.header-mob__menu-item_auth'),\n    headrBttnMobMenuOpen: document.querySelector('.header-navbar__mob-menu-icon'),\n    headrMobClose: document.querySelector('.header-mob__close-icon'),\n    headerMob: document.querySelector('.header-mob')\n  },\n  validator: {\n    popupForm: '.popup__form',\n    popupField: '.popup__input',\n    popupError: '.popup__error',\n    popupSubmit: '.popup__button',\n    popupHide: '.popup__error_hide'\n  },\n  newsSection: {\n    cardGrid: document.querySelector('.result__cards'),\n    showMoreButton: document.querySelector('.results__show-more')\n  },\n  newsCard: {\n    cardReminderSignin: 'Войдите, чтобы сохранять',\n    cardReminderAdd: 'Добавить в избранное',\n    cardReminderRemove: 'Убрать из сохранённых'\n  },\n  infoSaved: {\n    infoTitle: document.querySelector('.info__your-bookmarks'),\n    infoTemplate: '#infoTemplate'\n  }\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvanMvY29uc3RhbnRzL3NlbGVjdG9ycy5qcz9iYWExIl0sIm5hbWVzIjpbInNlYXJjaFNlbGVjdG9yIiwiZG9jdW1lbnQiLCJxdWVyeVNlbGVjdG9yIiwiY2FyZFRlbXBsYXRlTWFpbiIsImNhcmRUZW1wbGF0ZVNhdmVkIiwicG9wdXBGb3JtU2lnbmluIiwicG9wdXBGb3JtU2lnbnVwIiwicG9wdXBBbHRCdXR0b24iLCJwb3B1cEZvcm1TaWdudXBPayIsInNlYXJjaCIsInJlc3VsdHMiLCJyZXN1bHRzU2VhcmNoaW5nIiwicmVzdWx0c05vdGhpbmciLCJoZWFkZXIiLCJoZWFkZXJTYXZlZCIsImhlYWRlckF1dGgiLCJoZWFkZXJOYW1lIiwiaGVhZGVyTmFtZUJ1dHRvbiIsImhlYWRyYnR0bkxvZ2luIiwiaGVhZHJidHRuTW9iTG9naW4iLCJoZWFkckJ0dG5Nb2JNZW51T3BlbiIsImhlYWRyTW9iQ2xvc2UiLCJoZWFkZXJNb2IiLCJ2YWxpZGF0b3IiLCJwb3B1cEZvcm0iLCJwb3B1cEZpZWxkIiwicG9wdXBFcnJvciIsInBvcHVwU3VibWl0IiwicG9wdXBIaWRlIiwibmV3c1NlY3Rpb24iLCJjYXJkR3JpZCIsInNob3dNb3JlQnV0dG9uIiwibmV3c0NhcmQiLCJjYXJkUmVtaW5kZXJTaWduaW4iLCJjYXJkUmVtaW5kZXJBZGQiLCJjYXJkUmVtaW5kZXJSZW1vdmUiLCJpbmZvU2F2ZWQiLCJpbmZvVGl0bGUiLCJpbmZvVGVtcGxhdGUiXSwibWFwcGluZ3MiOiJBQUFlO0FBQ2I7QUFDQUEsZ0JBQWMsRUFBRUMsUUFBUSxDQUFDQyxhQUFULENBQXVCLGNBQXZCLENBRkg7QUFHYkMsa0JBQWdCLEVBQUUsbUJBSEw7QUFJYkMsbUJBQWlCLEVBQUUsb0JBSk47QUFLYkMsaUJBQWUsRUFBRUosUUFBUSxDQUFDQyxhQUFULENBQXVCLGdCQUF2QixDQUxKO0FBTWJJLGlCQUFlLEVBQUVMLFFBQVEsQ0FBQ0MsYUFBVCxDQUF1QixnQkFBdkIsQ0FOSjtBQU9iSyxnQkFBYyxFQUFFLDRCQVBIO0FBUWJDLG1CQUFpQixFQUFFUCxRQUFRLENBQUNDLGFBQVQsQ0FBdUIsbUJBQXZCLENBUk47QUFTYk8sUUFBTSxFQUFFO0FBQ05DLFdBQU8sRUFBRVQsUUFBUSxDQUFDQyxhQUFULENBQXVCLFVBQXZCLENBREg7QUFFTlMsb0JBQWdCLEVBQUVWLFFBQVEsQ0FBQ0MsYUFBVCxDQUF1QixtQkFBdkIsQ0FGWjtBQUdOVSxrQkFBYyxFQUFFWCxRQUFRLENBQUNDLGFBQVQsQ0FBdUIsYUFBdkI7QUFIVixHQVRLO0FBY2JXLFFBQU0sRUFBRTtBQUNOQyxlQUFXLEVBQUUsdUJBRFA7QUFFTkMsY0FBVSxFQUFFLHNCQUZOO0FBR05DLGNBQVUsRUFBRSxzQkFITjtBQUlOQyxvQkFBZ0IsRUFBRSxnQ0FKWjtBQUtOQyxrQkFBYyxFQUFFakIsUUFBUSxDQUFDQyxhQUFULENBQXVCLGdDQUF2QixDQUxWO0FBTU5pQixxQkFBaUIsRUFBRWxCLFFBQVEsQ0FBQ0MsYUFBVCxDQUF1Qiw2QkFBdkIsQ0FOYjtBQU9Oa0Isd0JBQW9CLEVBQUVuQixRQUFRLENBQUNDLGFBQVQsQ0FBdUIsK0JBQXZCLENBUGhCO0FBUU5tQixpQkFBYSxFQUFFcEIsUUFBUSxDQUFDQyxhQUFULENBQXVCLHlCQUF2QixDQVJUO0FBU05vQixhQUFTLEVBQUVyQixRQUFRLENBQUNDLGFBQVQsQ0FBdUIsYUFBdkI7QUFUTCxHQWRLO0FBeUJicUIsV0FBUyxFQUFFO0FBQ1RDLGFBQVMsRUFBRSxjQURGO0FBRVRDLGNBQVUsRUFBRSxlQUZIO0FBR1RDLGNBQVUsRUFBRSxlQUhIO0FBSVRDLGVBQVcsRUFBRSxnQkFKSjtBQUtUQyxhQUFTLEVBQUU7QUFMRixHQXpCRTtBQWdDYkMsYUFBVyxFQUFFO0FBQ1hDLFlBQVEsRUFBRTdCLFFBQVEsQ0FBQ0MsYUFBVCxDQUF1QixnQkFBdkIsQ0FEQztBQUVYNkIsa0JBQWMsRUFBRTlCLFFBQVEsQ0FBQ0MsYUFBVCxDQUF1QixxQkFBdkI7QUFGTCxHQWhDQTtBQW9DYjhCLFVBQVEsRUFBRTtBQUNSQyxzQkFBa0IsRUFBRSwwQkFEWjtBQUVSQyxtQkFBZSxFQUFFLHNCQUZUO0FBR1JDLHNCQUFrQixFQUFFO0FBSFosR0FwQ0c7QUF5Q2JDLFdBQVMsRUFBRTtBQUNUQyxhQUFTLEVBQUVwQyxRQUFRLENBQUNDLGFBQVQsQ0FBdUIsdUJBQXZCLENBREY7QUFFVG9DLGdCQUFZLEVBQUU7QUFGTDtBQXpDRSxDQUFmIiwiZmlsZSI6IjAuanMiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCB7XG4gIC8vINC80L7QttC10YIg0YHRgtC+0LjRgiDRgNCw0LfQsdC40YLRjCDQvdCwIDIgLSDRgdC10LvQtdC60YLQvtGAINC4INCy0Y3Qu9GM0Y4sINC40LvQuCDQv9C+LdC00YDRg9Cz0L7QvNGDXG4gIHNlYXJjaFNlbGVjdG9yOiBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuc2VhcmNoLWZvcm0nKSxcbiAgY2FyZFRlbXBsYXRlTWFpbjogJyNjYXJkVGVtcGxhdGVNYWluJyxcbiAgY2FyZFRlbXBsYXRlU2F2ZWQ6ICcjY2FyZFRlbXBsYXRlU2F2ZWQnLFxuICBwb3B1cEZvcm1TaWduaW46IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5wb3B1cF9fc2lnbmluJyksXG4gIHBvcHVwRm9ybVNpZ251cDogZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnBvcHVwX19zaWdudXAnKSxcbiAgcG9wdXBBbHRCdXR0b246ICcucG9wdXBfX2FsdGVybmF0aXZlLWJ1dHRvbicsXG4gIHBvcHVwRm9ybVNpZ251cE9rOiBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcucG9wdXBfX3NpZ251cC1vaycpLFxuICBzZWFyY2g6IHtcbiAgICByZXN1bHRzOiBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcucmVzdWx0cycpLFxuICAgIHJlc3VsdHNTZWFyY2hpbmc6IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5yZXN1bHRzX19sb2FkaW5nJyksXG4gICAgcmVzdWx0c05vdGhpbmc6IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5uby1yZXN1bHRzJyksXG4gIH0sXG4gIGhlYWRlcjoge1xuICAgIGhlYWRlclNhdmVkOiAnLmhlYWRlci1uYXZiYXJfX3NhdmVkJyxcbiAgICBoZWFkZXJBdXRoOiAnLmhlYWRlci1uYXZiYXJfX2F1dGgnLFxuICAgIGhlYWRlck5hbWU6ICcuaGVhZGVyLW5hdmJhcl9fbmFtZScsXG4gICAgaGVhZGVyTmFtZUJ1dHRvbjogJy5oZWFkZXItbmF2YmFyX19tZW51LWl0ZW0tbmFtZScsXG4gICAgaGVhZHJidHRuTG9naW46IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5oZWFkZXItbmF2YmFyX19tZW51LWl0ZW1fYXV0aCcpLFxuICAgIGhlYWRyYnR0bk1vYkxvZ2luOiBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuaGVhZGVyLW1vYl9fbWVudS1pdGVtX2F1dGgnKSxcbiAgICBoZWFkckJ0dG5Nb2JNZW51T3BlbjogZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmhlYWRlci1uYXZiYXJfX21vYi1tZW51LWljb24nKSxcbiAgICBoZWFkck1vYkNsb3NlOiBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuaGVhZGVyLW1vYl9fY2xvc2UtaWNvbicpLFxuICAgIGhlYWRlck1vYjogZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmhlYWRlci1tb2InKSxcbiAgfSxcbiAgdmFsaWRhdG9yOiB7XG4gICAgcG9wdXBGb3JtOiAnLnBvcHVwX19mb3JtJyxcbiAgICBwb3B1cEZpZWxkOiAnLnBvcHVwX19pbnB1dCcsXG4gICAgcG9wdXBFcnJvcjogJy5wb3B1cF9fZXJyb3InLFxuICAgIHBvcHVwU3VibWl0OiAnLnBvcHVwX19idXR0b24nLFxuICAgIHBvcHVwSGlkZTogJy5wb3B1cF9fZXJyb3JfaGlkZScsXG4gIH0sXG4gIG5ld3NTZWN0aW9uOiB7XG4gICAgY2FyZEdyaWQ6IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5yZXN1bHRfX2NhcmRzJyksXG4gICAgc2hvd01vcmVCdXR0b246IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5yZXN1bHRzX19zaG93LW1vcmUnKSxcbiAgfSxcbiAgbmV3c0NhcmQ6IHtcbiAgICBjYXJkUmVtaW5kZXJTaWduaW46ICfQktC+0LnQtNC40YLQtSwg0YfRgtC+0LHRiyDRgdC+0YXRgNCw0L3Rj9GC0YwnLFxuICAgIGNhcmRSZW1pbmRlckFkZDogJ9CU0L7QsdCw0LLQuNGC0Ywg0LIg0LjQt9Cx0YDQsNC90L3QvtC1JyxcbiAgICBjYXJkUmVtaW5kZXJSZW1vdmU6ICfQo9Cx0YDQsNGC0Ywg0LjQtyDRgdC+0YXRgNCw0L3RkdC90L3Ri9GFJyxcbiAgfSxcbiAgaW5mb1NhdmVkOiB7XG4gICAgaW5mb1RpdGxlOiBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuaW5mb19feW91ci1ib29rbWFya3MnKSxcbiAgICBpbmZvVGVtcGxhdGU6ICcjaW5mb1RlbXBsYXRlJyxcbiAgfVxufVxuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///0\n")},function(module,__webpack_exports__,__webpack_require__){"use strict";eval("/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return mainApiConfig; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return newsApiRequest; });\nconst currentDate = new Date();\nconst monthAgo = `${currentDate.getFullYear()}\n                 -${currentDate.getMonth()}\n                 -${currentDate.getDate() - 30}`;\nconst newsApiConfig = {\n  apiKeyStayPuft: '6aa47727b1b54808b0244a1d2c266dab',\n  sortBy: 'everything',\n  dateFrom: monthAgo,\n  country: '',\n  category: ''\n};\nconst mainApiConfig = {\n  baseUrl: 'https://api.newsexplorer.nomoredomains.club/',\n  // baseUrl: 'http://localhost:3000/',\n  credentialsState: 'include',\n  logoutLink: 'logout/',\n  signInLink: 'signin/',\n  signUpLink: 'signup/',\n  articlesLink: 'articles/',\n  usersLink: 'users/',\n  usersMeLink: 'me/',\n  headers: {\n    'Content-Type': 'application/json'\n  }\n};\nconst newsApiRequest = {\n  baseUrl: 'https://nomoreparties.co/news/v2/top-headlines?' + `${newsApiConfig.country ? `country=${newsApiConfig.country}&` : ''}` + `${newsApiConfig.dateFrom ? `from=${newsApiConfig.dateFrom}&` : ''}` + `${newsApiConfig.sortBy ? `sortBy=${newsApiConfig.sortBy}&` : ''}` + `${newsApiConfig.apiKeyStayPuft ? `apiKey=${newsApiConfig.apiKeyStayPuft}&` : ''}` + `${newsApiConfig.category ? `category=${newsApiConfig.category}&` : ''}`\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvanMvY29uc3RhbnRzL2NvbnN0YW50cy5qcz9lNTUyIl0sIm5hbWVzIjpbImN1cnJlbnREYXRlIiwiRGF0ZSIsIm1vbnRoQWdvIiwiZ2V0RnVsbFllYXIiLCJnZXRNb250aCIsImdldERhdGUiLCJuZXdzQXBpQ29uZmlnIiwiYXBpS2V5U3RheVB1ZnQiLCJzb3J0QnkiLCJkYXRlRnJvbSIsImNvdW50cnkiLCJjYXRlZ29yeSIsIm1haW5BcGlDb25maWciLCJiYXNlVXJsIiwiY3JlZGVudGlhbHNTdGF0ZSIsImxvZ291dExpbmsiLCJzaWduSW5MaW5rIiwic2lnblVwTGluayIsImFydGljbGVzTGluayIsInVzZXJzTGluayIsInVzZXJzTWVMaW5rIiwiaGVhZGVycyIsIm5ld3NBcGlSZXF1ZXN0Il0sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQUEsTUFBTUEsV0FBVyxHQUFHLElBQUlDLElBQUosRUFBcEI7QUFDQSxNQUFNQyxRQUFRLEdBQUksR0FBRUYsV0FBVyxDQUFDRyxXQUFaLEVBQTBCO0FBQzlDLG9CQUFvQkgsV0FBVyxDQUFDSSxRQUFaLEVBQXVCO0FBQzNDLG9CQUFvQkosV0FBVyxDQUFDSyxPQUFaLEtBQXNCLEVBQUcsRUFGN0M7QUFJQSxNQUFNQyxhQUFhLEdBQUc7QUFDcEJDLGdCQUFjLEVBQUUsa0NBREk7QUFFcEJDLFFBQU0sRUFBRSxZQUZZO0FBR3BCQyxVQUFRLEVBQUVQLFFBSFU7QUFJcEJRLFNBQU8sRUFBRSxFQUpXO0FBS3BCQyxVQUFRLEVBQUU7QUFMVSxDQUF0QjtBQVFBLE1BQU1DLGFBQWEsR0FBRztBQUNwQkMsU0FBTyxFQUFFLDhDQURXO0FBRXBCO0FBQ0FDLGtCQUFnQixFQUFFLFNBSEU7QUFJcEJDLFlBQVUsRUFBRSxTQUpRO0FBS3BCQyxZQUFVLEVBQUUsU0FMUTtBQU1wQkMsWUFBVSxFQUFFLFNBTlE7QUFPcEJDLGNBQVksRUFBRSxXQVBNO0FBUXBCQyxXQUFTLEVBQUUsUUFSUztBQVNwQkMsYUFBVyxFQUFFLEtBVE87QUFVcEJDLFNBQU8sRUFBRTtBQUNQLG9CQUFnQjtBQURUO0FBVlcsQ0FBdEI7QUFlQSxNQUFNQyxjQUFjLEdBQUc7QUFDckJULFNBQU8sRUFBRSxvREFDRSxHQUFFUCxhQUFhLENBQUNJLE9BQWQsR0FBeUIsV0FBVUosYUFBYSxDQUFDSSxPQUFRLEdBQXpELEdBQThELEVBQUcsRUFEckUsR0FFRSxHQUFFSixhQUFhLENBQUNHLFFBQWQsR0FBMEIsUUFBT0gsYUFBYSxDQUFDRyxRQUFTLEdBQXhELEdBQTZELEVBQUcsRUFGcEUsR0FHRSxHQUFFSCxhQUFhLENBQUNFLE1BQWQsR0FBd0IsVUFBU0YsYUFBYSxDQUFDRSxNQUFPLEdBQXRELEdBQTJELEVBQUcsRUFIbEUsR0FJRSxHQUFFRixhQUFhLENBQUNDLGNBQWQsR0FBZ0MsVUFBU0QsYUFBYSxDQUFDQyxjQUFlLEdBQXRFLEdBQTJFLEVBQUcsRUFKbEYsR0FLRSxHQUFFRCxhQUFhLENBQUNLLFFBQWQsR0FBMEIsWUFBV0wsYUFBYSxDQUFDSyxRQUFTLEdBQTVELEdBQWlFLEVBQUc7QUFONUQsQ0FBdkIiLCJmaWxlIjoiMS5qcyIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IGN1cnJlbnREYXRlID0gbmV3IERhdGUoKTtcbmNvbnN0IG1vbnRoQWdvID0gYCR7Y3VycmVudERhdGUuZ2V0RnVsbFllYXIoKX1cbiAgICAgICAgICAgICAgICAgLSR7Y3VycmVudERhdGUuZ2V0TW9udGgoKX1cbiAgICAgICAgICAgICAgICAgLSR7Y3VycmVudERhdGUuZ2V0RGF0ZSgpLTMwfWA7XG5cbmNvbnN0IG5ld3NBcGlDb25maWcgPSB7XG4gIGFwaUtleVN0YXlQdWZ0OiAnNmFhNDc3MjdiMWI1NDgwOGIwMjQ0YTFkMmMyNjZkYWInLFxuICBzb3J0Qnk6ICdldmVyeXRoaW5nJyxcbiAgZGF0ZUZyb206IG1vbnRoQWdvLFxuICBjb3VudHJ5OiAnJyxcbiAgY2F0ZWdvcnk6ICcnLFxufTtcblxuY29uc3QgbWFpbkFwaUNvbmZpZyA9IHtcbiAgYmFzZVVybDogJ2h0dHBzOi8vYXBpLm5ld3NleHBsb3Jlci5ub21vcmVkb21haW5zLmNsdWIvJyxcbiAgLy8gYmFzZVVybDogJ2h0dHA6Ly9sb2NhbGhvc3Q6MzAwMC8nLFxuICBjcmVkZW50aWFsc1N0YXRlOiAnaW5jbHVkZScsXG4gIGxvZ291dExpbms6ICdsb2dvdXQvJyxcbiAgc2lnbkluTGluazogJ3NpZ25pbi8nLFxuICBzaWduVXBMaW5rOiAnc2lnbnVwLycsXG4gIGFydGljbGVzTGluazogJ2FydGljbGVzLycsXG4gIHVzZXJzTGluazogJ3VzZXJzLycsXG4gIHVzZXJzTWVMaW5rOiAnbWUvJyxcbiAgaGVhZGVyczoge1xuICAgICdDb250ZW50LVR5cGUnOiAnYXBwbGljYXRpb24vanNvbicsXG4gIH0sXG59O1xuXG5jb25zdCBuZXdzQXBpUmVxdWVzdCA9IHtcbiAgYmFzZVVybDogJ2h0dHBzOi8vbm9tb3JlcGFydGllcy5jby9uZXdzL3YyL3RvcC1oZWFkbGluZXM/J1xuICAgICAgICAgICsgYCR7bmV3c0FwaUNvbmZpZy5jb3VudHJ5ID8gYGNvdW50cnk9JHtuZXdzQXBpQ29uZmlnLmNvdW50cnl9JmAgOiAnJ31gXG4gICAgICAgICAgKyBgJHtuZXdzQXBpQ29uZmlnLmRhdGVGcm9tID8gYGZyb209JHtuZXdzQXBpQ29uZmlnLmRhdGVGcm9tfSZgIDogJyd9YFxuICAgICAgICAgICsgYCR7bmV3c0FwaUNvbmZpZy5zb3J0QnkgPyBgc29ydEJ5PSR7bmV3c0FwaUNvbmZpZy5zb3J0Qnl9JmAgOiAnJ31gXG4gICAgICAgICAgKyBgJHtuZXdzQXBpQ29uZmlnLmFwaUtleVN0YXlQdWZ0ID8gYGFwaUtleT0ke25ld3NBcGlDb25maWcuYXBpS2V5U3RheVB1ZnR9JmAgOiAnJ31gXG4gICAgICAgICAgKyBgJHtuZXdzQXBpQ29uZmlnLmNhdGVnb3J5ID8gYGNhdGVnb3J5PSR7bmV3c0FwaUNvbmZpZy5jYXRlZ29yeX0mYCA6ICcnfWAsXG59O1xuXG5leHBvcnQgeyBtYWluQXBpQ29uZmlnLCBuZXdzQXBpUmVxdWVzdCB9O1xuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///1\n")},function(module,__webpack_exports__,__webpack_require__){"use strict";eval("/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return NewsSection; });\nclass NewsSection {\n  constructor(newsSection, keyword, {\n    cardCreator,\n    newsToCheck\n  }) {\n    this._container = newsSection.cardGrid;\n    this._showMoreButton = newsSection.showMoreButton;\n    this._keyword = keyword;\n    this._cardCreator = cardCreator;\n    this._newsToCheck = newsToCheck;\n    this._showMoreHandler = this._showMoreLogic.bind(this);\n  } //очистка контейнера\n  //проверка есть ли сохраненные новости среди выдачи(для залогиненых пользователей)\n  //рендер 3 новостей\n  //инсталл слушателя событий\n\n\n  showNews() {\n    this._cleanContainer();\n\n    this._checkIfSaved();\n\n    this._checkNewsLength();\n\n    this._moreButtonListener();\n  } // рендер 3 новостей\n\n\n  _checkNewsLength() {\n    if (this._newsToRender.length > 3) {\n      this._showMoreButton.classList.remove('results__show-more_hidden');\n\n      this._newsSlicer();\n    } else {\n      this._showMoreButton.classList.add('results__show-more_hidden');\n\n      this._render(this._newsToRender, this._keyword);\n    }\n  } // добавление одной готовой карточки\n\n\n  addCard(card) {\n    this._container.appendChild(card);\n  }\n\n  removeCard(card) {\n    this._container.removeChild(card);\n  } // отрисовка массива из конструктора\n\n\n  _render(arr, keyword) {\n    for (let i = 0; i < arr.length; i++) {\n      this._cardCreator(arr[i], keyword);\n    }\n  } // рендер трех карточек с обрезкой основного массива\n\n\n  _newsSlicer() {\n    const newsPack = this._newsToRender.slice(0, 3);\n\n    this._newsToRender.splice(0, 3);\n\n    this._render(newsPack, this._keyword);\n  } // логика слушателя\n\n\n  _showMoreLogic(evt) {\n    evt.preventDefault();\n\n    this._checkNewsLength();\n\n    this._newsSlicer();\n\n    this._removeMoreButtonListener();\n\n    this._moreButtonListener();\n  } // установка и удаление слушателей кнопки \"показать еще\"\n\n\n  _moreButtonListener() {\n    this._showMoreButton.addEventListener('click', this._showMoreHandler);\n  }\n\n  _removeMoreButtonListener() {\n    this._showMoreButton.removeEventListener('click', this._showMoreHandler);\n  }\n\n  _cleanContainer() {\n    this._container.innerHTML = '';\n  }\n\n  getInfo() {\n    const arr = [];\n\n    this._newsToRender.forEach(i => arr.push(i.firstElementChild.getAttribute(keyword)));\n\n    console.log(arr);\n  }\n\n  _checkIfSaved() {\n    if (this._newsToCheck.newNews === undefined) {\n      this._newsToRender = this._newsToCheck.savedNews;\n    } else if (this._newsToCheck.savedNews === undefined) {\n      this._newsToRender = this._newsToCheck.newNews;\n    } else {\n      this._newsToCheck.newNews.forEach(card => {\n        card.isLiked = this._newsToCheck.savedNews.some(savedCard => savedCard.link == card.url);\n      });\n\n      this._newsToRender = this._newsToCheck.newNews;\n    }\n  }\n\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///2\n")},function(module,__webpack_exports__,__webpack_require__){"use strict";eval("/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return MainApi; });\nclass MainApi {\n  constructor(options) {\n    this.isLoggedIn = false;\n    this.baseUrl = options.baseUrl;\n    this.headers = options.headers;\n    this.credentialsState = options.credentialsState;\n    this.logoutLink = options.logoutLink;\n    this.signInLink = options.signInLink;\n    this.signUpLink = options.signUpLink;\n    this.articlesLink = options.articlesLink;\n    this.usersLink = options.usersLink;\n    this.usersMeLink = options.usersMeLink;\n    this.headersAuth = Object.assign({}, this.headers, {\n      authorization: `Bearer ${localStorage.getItem('token')}`\n    });\n  } // впомогательная функция для запросов на сервер\n\n\n  async _request(url, method, someHeader, toString) {\n    try {\n      const res = await fetch(this.baseUrl + url, {\n        method,\n        headers: someHeader,\n        credentials: this.credentialsState,\n        body: toString ? JSON.stringify(toString) : undefined\n      }); // if (res.status >= 400) {\n      //   return Promise.reject(res.statusText);\n      // }\n      // if (res.ok)\n\n      return res.json(); // if (!res.ok) {return res.message} else {return res}\n      // return res.json() ;\n    } catch (e) {\n      `error: ${e}`;\n    }\n  } // signIn(email, password) {\n  //   return fetch(this.baseUrl + this.signInLink, {\n  //     method: 'POST',\n  //     headers: {\n  //       'Content-Type': 'application/json',\n  //     },\n  //     credentials: 'include',\n  //     body: JSON.stringify({ email, password }),\n  //   })\n  //     .then((res) => res.json())\n  //     .then((res) => {\n  //       if (res.statusCode >= 400) {\n  //         return Promise.reject(res.message);\n  //       }\n  //       return res;\n  //     })\n  //     .then((data) => {\n  //       localStorage.setItem('token', data.token);\n  //       return data;\n  //     })\n  //     .catch((err) => Promise.reject(err));\n  // }\n\n\n  signUp(email, password, name) {\n    return this._request(this.signUpLink, 'POST', this.headers, {\n      email,\n      password,\n      name\n    });\n  }\n\n  signIn(email, password) {\n    return this._request(this.signInLink, 'POST', this.headers, {\n      email,\n      password\n    }).then(res => {\n      if (!res.ok) {\n        return Promise.reject(res.message);\n      }\n\n      return res;\n    }).then(data => {\n      localStorage.setItem('token', data.token);\n      return data;\n    }).catch(err => Promise.reject(err));\n  }\n\n  logout() {\n    return this._request(this.logoutLink, 'POST', this.headers);\n  }\n\n  getArticles() {\n    return this._request(this.articlesLink, 'GET', this.headers);\n  }\n\n  postArticle({\n    keyword,\n    title,\n    text,\n    date,\n    source,\n    link,\n    image\n  }) {\n    return this._request(this.articlesLink, 'POST', this.headers, {\n      keyword,\n      title,\n      text,\n      date,\n      source,\n      link,\n      image\n    });\n  }\n\n  deleteArticle(articleId) {\n    return this._request(this.articlesLink + articleId, 'DELETE', this.headers);\n  }\n\n  getUserInfo() {\n    return this._request(this.usersLink + this.usersMeLink, 'GET', this.headersAuth);\n  }\n\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///3\n")},function(module,__webpack_exports__,__webpack_require__){"use strict";eval("/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return Header; });\nclass Header {\n  constructor(header, {\n    callback,\n    popupCallback,\n    getInfo\n  }) {\n    this._headerSaved = document.querySelectorAll(header.headerSaved);\n    this._headerAuth = document.querySelectorAll(header.headerAuth);\n    this._headerName = document.querySelectorAll(header.headerName);\n    this._headerNameButton = document.querySelectorAll(header.headerNameButton);\n    this._callback = callback;\n    this._popupCallback = popupCallback;\n    this._getInfo = getInfo;\n    this._logoutHandler = this._logoutLogic.bind(this);\n    this._headrbttnLogin = header.headrbttnLogin;\n    this._headrbttnMobLogin = header.headrbttnMobLogin;\n    this._headrBttnMobMenuOpen = header.headrBttnMobMenuOpen;\n    this._headrMobClose = header.headrMobClose;\n    this._headerMob = header.headerMob;\n    this._mobMenuHandler = this._mobMenuLogic.bind(this);\n    this._popupOpenHandler = this._popupOpenLogic.bind(this);\n  }\n\n  _headerIteratorAdd(selector) {\n    selector.forEach(i => i.classList.add('header-navbar__menu-item_hidden'));\n  }\n\n  _headerIteratorRemove(selector) {\n    selector.forEach(i => i.classList.remove('header-navbar__menu-item_hidden'));\n  }\n\n  render(isLoggedIn, userName) {\n    if (isLoggedIn) {\n      this._headerIteratorAdd(this._headerAuth);\n\n      this._headerIteratorRemove(this._headerSaved);\n\n      this._headerIteratorRemove(this._headerName);\n\n      this._headerNameButton.forEach(i => i.textContent = userName);\n\n      this._logoutListener();\n    } else {\n      this._headerIteratorRemove(this._headerAuth);\n\n      this._headerIteratorAdd(this._headerSaved);\n\n      this._headerIteratorAdd(this._headerName);\n\n      this._headerNameButton.forEach(i => i.textContent = '');\n\n      this._removeLogoutListener();\n    }\n  }\n\n  setEventListeners() {\n    this._popupOpenListener();\n\n    this._mobMenuListener();\n  }\n\n  tokenCheck(gotToken) {\n    this.setEventListeners();\n\n    if (gotToken) {\n      this._getInfo(gotToken);\n    }\n  }\n\n  _removePopupOpenListener() {\n    this._headrbttnLogin.removeEventListener('click', this._popupOpenHandler);\n\n    this._headrbttnMobLogin.removeEventListener('click', this._popupOpenHandler);\n  }\n\n  _popupOpenListener() {\n    this._headrbttnLogin.addEventListener('click', this._popupOpenHandler);\n\n    this._headrbttnMobLogin.addEventListener('click', this._popupOpenHandler);\n  }\n\n  _logoutListener() {\n    this._headerName.forEach(i => i.addEventListener('click', this._logoutHandler));\n  }\n\n  _removeLogoutListener() {\n    this._headerName.forEach(i => i.removeEventListener('click', this._logoutHandler));\n  }\n\n  _logoutLogic() {\n    this._callback();\n\n    this.render(false, '');\n  }\n\n  _popupOpenLogic() {\n    this._popupCallback();\n  }\n\n  _removeMobMenuListener() {\n    this._headrBttnMobMenuOpen.removeEventListener('click', this._mobMenuHandler);\n\n    this._headrMobClose.removeEventListener('click', this._mobMenuHandler);\n  }\n\n  _mobMenuListener() {\n    this._headrBttnMobMenuOpen.addEventListener('click', this._mobMenuHandler);\n\n    this._headrMobClose.addEventListener('click', this._mobMenuHandler);\n  }\n\n  _mobMenuLogic() {\n    this._headerMob.classList.toggle('header-mob_is-opened');\n  }\n\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///4\n")},function(module,exports,__webpack_require__){eval("// extracted by mini-css-extract-plugin//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvc3R5bGVzL2luZGV4LmNzcz83MzQ4Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBIiwiZmlsZSI6IjUuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBleHRyYWN0ZWQgYnkgbWluaS1jc3MtZXh0cmFjdC1wbHVnaW4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///5\n")},,function(module,__webpack_exports__,__webpack_require__){"use strict";eval("// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n// EXTERNAL MODULE: ./src/styles/index.css\nvar styles = __webpack_require__(5);\n\n// CONCATENATED MODULE: ./src/js/components/NewsCard.js\nclass NewsCard {\n  constructor(cardTemplate, isLoggedIn, newsCard, {\n    removeNews,\n    addNews\n  }) {\n    this._cardTemplate = cardTemplate;\n    this._isLoggedIn = isLoggedIn;\n    this._cardReminderSignin = newsCard.cardReminderSignin;\n    this._cardReminderAdd = newsCard.cardReminderAdd;\n    this._removeNews = removeNews;\n    this._addNews = addNews;\n    this._likeHandler = this._likeLogic.bind(this);\n  }\n\n  _getTemplate() {\n    return document.querySelector(this._cardTemplate).content.cloneNode(true);\n  }\n\n  _chooseReminder() {\n    if (this._isLoggedIn) return this._cardReminderAdd;else return this._cardReminderSignin;\n  }\n\n  create(item, keyword) {\n    this._cardItem = item;\n    this._keyword = keyword;\n    this.date = new Date();\n    this.newCard = this._getTemplate();\n    this.newCard.querySelector('.card__login-reminder-text').textContent = this._chooseReminder();\n    this.newCard.querySelector('.card__date').textContent = this.date.toUTCString(item.publishedAt);\n    this.newCard.querySelector('.card__title').textContent = item.title;\n    this.newCard.querySelector('.card__subtitle').textContent = item.description;\n    this.newCard.querySelector('.card__source').textContent = item.source.name;\n    this.newCard.querySelector('.card__img').setAttribute('src', `${item.urlToImage}`);\n    this.newCard.firstElementChild.setAttribute('src', `${item.url}`);\n    if (keyword) this.newCard.firstElementChild.setAttribute('keyword', `${keyword}`);\n\n    this._wasSaved();\n\n    this._likeListener();\n\n    return this.newCard;\n  }\n\n  _wasSaved() {\n    if (this._cardItem.isLiked) this.newCard.querySelector('.card__bookmark').classList.add('card__bookmark_logged');\n  }\n\n  _likeListener() {\n    this.newCard.firstElementChild.addEventListener('click', this._likeHandler);\n  }\n\n  _likeLogic(evt) {\n    if (evt.target.classList.contains('card__bookmark_logged') && this._isLoggedIn == true) {\n      evt.target.classList.remove('card__bookmark_logged');\n\n      this._removeNews(this.newCard._id);\n    } else if (evt.target.classList.contains('card__bookmark') && this._isLoggedIn == true) {\n      evt.target.classList.add('card__bookmark_logged');\n\n      this._addNews(this._cardRepack());\n    }\n  }\n\n  _cardRepack() {\n    return this.cardToSave = {\n      keyword: this._keyword,\n      title: this._cardItem.title,\n      text: this._cardItem.description,\n      date: this._cardItem.publishedAt,\n      source: this._cardItem.source.name,\n      link: this._cardItem.url,\n      image: this._cardItem.urlToImage\n    };\n  }\n\n}\n// EXTERNAL MODULE: ./src/js/components/NewsSection.js\nvar NewsSection = __webpack_require__(2);\n\n// EXTERNAL MODULE: ./src/js/api/MainApi.js\nvar MainApi = __webpack_require__(3);\n\n// CONCATENATED MODULE: ./src/js/api/NewsApi.js\n// NewsApi. Отвечает за взаимодействие с NewsAPI. У класса есть конструктор, принимающий опции, и единственный обязательный метод getNews. getNews возвращает список новостей на основе запроса.\n// Каждый из методов этих классов возвращает промис, содержит в себе обработку ответа и обязательный блок .catch(), бросающий ошибку дальше с помощью Promise.reject или throw. Также классы MainApi и NewsApi не должны взаимодействовать с DOM напрямую из своих методов.\nclass NewsApi {\n  constructor(options) {\n    this.baseUrl = options.baseUrl;\n  } // eslint-disable-next-line consistent-return\n\n\n  async getInitialCards(text) {\n    try {\n      const res = await fetch(`${this.baseUrl}q=${text}`, {\n        method: 'GET'\n      });\n      if (res.ok) return res.json();\n    } catch (e) {\n      // eslint-disable-next-line no-unused-expressions\n      `error: ${e}`;\n    }\n  }\n\n}\n// CONCATENATED MODULE: ./src/js/components/FormValidator.js\nclass FormValidator {\n  constructor(popupSelector, validator) {\n    this._popupSelector = popupSelector;\n    this._formElement = this._popupSelector.querySelector(validator.popupForm);\n    this._inputElement = validator.popupField;\n    this._errorElement = validator.popupError;\n    this._errorDisabled = validator.popupHide;\n    this._inputs = Array.from(this._formElement.querySelectorAll(this._inputElement));\n    this._submitButton = this._formElement.querySelector(validator.popupSubmit);\n  }\n\n  enableValidation() {\n    this._formElement.addEventListener('submit', evt => {\n      evt.preventDefault();\n    });\n\n    this._setInputListeners();\n  }\n\n  _setInputListeners() {\n    this._inputs.forEach(input => {\n      input.addEventListener('input', () => {\n        this._isValid(input);\n\n        this._submitButtonToggler(this._formElement);\n      });\n    });\n  }\n\n  _submitButtonToggler() {\n    const submitState = !this._hasInvalidInput(this._formElement);\n\n    if (submitState && !this._isEmpty()) {\n      this._submitButton.classList.add('active');\n    } else {\n      this._submitButton.classList.remove('active');\n    }\n  }\n\n  _openInputError(input) {\n    const errSpan = this._popupSelector.querySelector(`.${input.id}-error`);\n\n    errSpan.textContent = this._checkInputValidity(input, errSpan);\n    errSpan.classList.remove(this._errorDisabled);\n  }\n\n  _checkInputValidity(input, error) {\n    if (input.validity.valueMissing) {\n      return error.textContent = 'Это обязательное поле, господин';\n    }\n\n    if (input.validity.tooShort) {\n      return error.textContent = 'Господин, должно быть от 8 до 30 символов';\n    }\n\n    if (input.validity.tooLong) {\n      return error.textContent = 'Господин, должно быть от 8 до 30 символов';\n    }\n\n    if (input.validity.typeMismatch) {\n      return error.textContent = 'Здесь должен быть email, господин';\n    }\n  }\n\n  _hideInputError(input) {\n    const errSpan = this._popupSelector.querySelector(`.${input.id}-error`);\n\n    errSpan.textContent = '';\n    errSpan.classList.add(this._errorDisabled);\n  }\n\n  _hasInvalidInput() {\n    return this._inputs.some(input => {\n      return !input.validity.valid;\n    });\n  }\n\n  _isEmpty() {\n    return this._inputs.some(input => {\n      return input.value == '';\n    });\n  }\n\n  _isValid(input) {\n    if (!input.validity.valid) {\n      this._openInputError(input);\n    } else {\n      this._hideInputError(input);\n    }\n  }\n\n}\n// CONCATENATED MODULE: ./src/js/components/Popup.js\nclass Popup {\n  constructor(popupSelector) {\n    this._popup = popupSelector;\n    this._closeButton = this._popup.querySelector('.popup__close');\n    this._escCloseHandler = this._escCloseLogic.bind(this);\n    this._overlayCloseHandler = this._overlayCloseLogic.bind(this);\n    this._сloseHandler = this.close.bind(this);\n  }\n\n  open() {\n    this._popup.classList.add('popup_is-opened');\n\n    this._setEventListeners();\n  }\n\n  close() {\n    this._removeEventListeners();\n\n    this._popup.classList.remove('popup_is-opened');\n  }\n\n  _formToggleClass() {\n    this._popup.classList.toggle('popup_is-opened');\n  } // слушатели событий\n\n\n  _listenerCloseButton() {\n    this._closeButton.addEventListener('click', this._сloseHandler);\n  }\n\n  _listenerEscClose() {\n    document.addEventListener('keydown', this._escCloseHandler);\n  }\n\n  _overlayFormListener() {\n    this._popup.addEventListener('click', this._overlayCloseHandler);\n  } // очистка от слушателей событий\n\n\n  _removeListenerCloseButton() {\n    this._closeButton.removeEventListener('click', this._сloseHandler);\n  }\n\n  _removeListenerEscClose() {\n    document.removeEventListener('keydown', this._escCloseHandler);\n  }\n\n  _removeOverlayFormListener() {\n    this._popup.removeEventListener('click', this._overlayCloseHandler);\n  } // логика слушателей событий\n\n\n  _escCloseLogic(evt) {\n    if (evt.key === 'Escape') {\n      this.close();\n    }\n  }\n\n  _overlayCloseLogic(evt) {\n    if (evt.target.classList.contains('overlay')) {\n      this.close();\n    }\n  } // установка и деинсталляция слушателей\n\n\n  _setEventListeners() {\n    this._listenerCloseButton();\n\n    this._listenerEscClose();\n\n    this._overlayFormListener();\n  }\n\n  _removeEventListeners() {\n    this._removeListenerCloseButton();\n\n    this._removeListenerEscClose();\n\n    this._removeOverlayFormListener();\n  }\n\n}\n// CONCATENATED MODULE: ./src/js/components/PopupSuccess.js\n\nclass PopupSuccess_PopupSuccess extends Popup {\n  constructor(popupAltButton, popupSelector, {\n    altPopup\n  }) {\n    super(popupSelector);\n    this._popupAltButton = this._popup.querySelector(popupAltButton);\n    this._altPopup = altPopup;\n    this._altPopupHandler = this._altPopupLogic.bind(this);\n  }\n\n  open() {\n    super.open();\n\n    this._altPopupListener();\n  }\n\n  close() {\n    this._removeAltPopupListener();\n\n    super.close();\n  } // слушатели событий\n\n\n  _altPopupListener() {\n    this._popupAltButton.addEventListener('click', this._altPopupHandler);\n  } // очистка от слушателей событий\n\n\n  _removeAltPopupListener() {\n    this._popupAltButton.removeEventListener('click', this._altPopupHandler);\n  } // логика слушателя событий\n\n\n  _altPopupLogic(evt) {\n    evt.preventDefault();\n    this.close();\n\n    this._altPopup(evt);\n  }\n\n}\n// CONCATENATED MODULE: ./src/js/components/PopupSignin.js\n\nclass PopupSignin_PopupSignin extends Popup {\n  constructor(popupAltButton, popupFormSignin, {\n    callback,\n    altPopup\n  }) {\n    super(popupFormSignin);\n    this._callback = callback;\n    this._altPopup = altPopup;\n    this._inputs = this._popup.querySelectorAll('.popup__input');\n    this._popupAltButton = this._popup.querySelector(popupAltButton);\n    this._submitHandler = this._submitLogic.bind(this);\n    this._altPopupHandler = this._altPopupLogic.bind(this);\n    this._getInputValuesContext = this._getInputValues();\n    this._submitButton = this._popup.querySelector('.popup__button');\n  }\n\n  open() {\n    super.open();\n\n    this._setEventListeners();\n  }\n\n  close() {\n    super.close();\n\n    this._clearInputValues();\n\n    this._removeEventListeners();\n  } // этот метод нужен?\n\n\n  setInputValues(userData) {\n    this._inputs[0].value = userData.userName;\n    this._inputs[1].value = userData.userJob;\n  }\n\n  _getInputValues() {\n    this._newInputs = [];\n\n    this._inputs.forEach(i => this._newInputs.push(i.value));\n\n    return this._newInputs;\n  }\n\n  _clearInputValues() {\n    this._inputs.forEach(i => i.value === '');\n  } // установка и деинсталляция слушателей\n\n\n  _setEventListeners() {\n    super._setEventListeners();\n\n    this._submitListener();\n\n    this._altPopupListener();\n  }\n\n  _removeEventListeners() {\n    this._removeSubmitListener();\n\n    this._removeAltPopupListener();\n  } // слушатели событий\n\n\n  _submitListener() {\n    this._submitButton.addEventListener('click', this._submitHandler);\n  }\n\n  _altPopupListener() {\n    this._popupAltButton.addEventListener('click', this._altPopupHandler);\n  } // очистка от слушателей событий\n\n\n  _removeAltPopupListener() {\n    this._popupAltButton.removeEventListener('click', this._altPopupHandler);\n  }\n\n  _removeSubmitListener() {\n    this._submitButton.removeEventListener('click', this._submitHandler);\n  } // логика слушателей событий\n\n\n  _submitLogic(evt) {\n    evt.preventDefault();\n\n    if (this._submitButton.classList.contains('active')) {\n      this._callback(this._getInputValues());\n\n      this.close();\n    }\n  }\n\n  _altPopupLogic(evt) {\n    evt.preventDefault();\n    this.close();\n\n    this._altPopup(evt);\n  }\n\n}\n// CONCATENATED MODULE: ./src/js/components/PopupSignup.js\n\nclass PopupSignup_PopupSignup extends Popup {\n  constructor(popupAltButton, popupFormSignup, {\n    callback,\n    altPopup\n  }) {\n    super(popupFormSignup);\n    this._callback = callback;\n    this._altPopup = altPopup;\n    this._inputs = this._popup.querySelectorAll('.popup__input');\n    this._popupAltButton = this._popup.querySelector(popupAltButton);\n    this._submitHandler = this._submitLogic.bind(this);\n    this._altPopupHandler = this._altPopupLogic.bind(this);\n    this._submitButton = this._popup.querySelector('.popup__button');\n  }\n\n  open() {\n    super.open();\n\n    this._setEventListeners();\n  }\n\n  close() {\n    super.close();\n\n    this._clearInputValues();\n\n    this._removeEventListeners();\n  }\n\n  _getInputValues() {\n    this._newInputs = [];\n\n    this._inputs.forEach(i => this._newInputs.push(i.value));\n\n    return this._newInputs;\n  }\n\n  _clearInputValues() {\n    this._inputs.forEach(i => i.value === '');\n  } // установка и деинсталляция слушателей\n\n\n  _setEventListeners() {\n    super._setEventListeners();\n\n    this._altPopupListener();\n\n    this._submitListener();\n  }\n\n  _removeEventListeners() {\n    this._removeSubmitListener();\n\n    this._removeAltPopupListener();\n  } // слушатели событий\n\n\n  _submitListener() {\n    this._submitButton.addEventListener('click', this._submitHandler);\n  }\n\n  _altPopupListener() {\n    this._popupAltButton.addEventListener('click', this._altPopupHandler);\n  } // очистка от слушателей событий\n\n\n  _removeAltPopupListener() {\n    this._popupAltButton.removeEventListener('click', this._altPopupHandler);\n  }\n\n  _removeSubmitListener() {\n    this._submitButton.removeEventListener('click', this._submitHandler);\n  } // логика слушателей событий\n\n\n  _submitLogic(evt) {\n    evt.preventDefault();\n\n    if (this._submitButton.classList.contains('active')) {\n      this._callback(this._getInputValues());\n\n      this.close();\n    }\n  }\n\n  _altPopupLogic(evt) {\n    evt.preventDefault();\n    this.close();\n\n    this._altPopup(evt);\n  }\n\n}\n// EXTERNAL MODULE: ./src/js/components/Header.js\nvar Header = __webpack_require__(4);\n\n// CONCATENATED MODULE: ./src/js/components/SearchForm.js\nclass SearchForm {\n  constructor(searchSelector, search, {\n    getNews\n  }) {\n    this._searchSelector = searchSelector;\n    this._results = search.results;\n    this._resultsNothing = search.resultsNothing;\n    this._resultsSearching = search.resultsSearching;\n    this._getNews = getNews;\n    this._searchHandler = this._searchLogic.bind(this);\n  }\n\n  setSearchListener() {\n    this._searchSelector.addEventListener('submit', this._searchHandler);\n  }\n\n  _newsSearching() {\n    this._close(this._results);\n\n    this._open(this._resultsSearching);\n\n    this._close(this._resultsNothing);\n  }\n\n  newsFound() {\n    this._open(this._results);\n\n    this._close(this._resultsSearching);\n\n    this._close(this._resultsNothing);\n  }\n\n  newsNoResultsCheck(res) {\n    if (res === undefined || res.articles.length === 0 || res.articles.length === undefined) {\n      this._close(this._results);\n\n      this._close(this._resultsSearching);\n\n      this._open(this._resultsNothing);\n    } else {\n      this._open(this._results);\n\n      this._results.classList.remove('results_hidden');\n\n      this._close(this._resultsSearching);\n\n      this._close(this._resultsNothing);\n    }\n  }\n\n  startSearch(searchSelector) {\n    searchSelector.addEventListener('submit', evt => {\n      evt.preventDefault();\n\n      this._newsSearching();\n    });\n  }\n\n  _searchLogic(evt) {\n    evt.preventDefault();\n\n    this._newsSearching();\n\n    this._getNews(this._searchSelector.keyword.value);\n  }\n\n  _open(obj) {\n    obj.classList.remove('results__loading_hidden');\n  }\n\n  _close(obj) {\n    obj.classList.add('results__loading_hidden');\n  }\n\n}\n// EXTERNAL MODULE: ./src/js/constants/selectors.js\nvar selectors = __webpack_require__(0);\n\n// EXTERNAL MODULE: ./src/js/constants/constants.js\nvar constants = __webpack_require__(1);\n\n// CONCATENATED MODULE: ./src/index.js\n\n\n\n\n\n // import Popup from './js/components/Popup';\n\n\n\n\n\n\n\n // инициализация api взаимодествия с сервером и newsApi\n\nconst newsApi = new NewsApi(constants[\"b\" /* newsApiRequest */]);\nconst mainApi = new MainApi[\"a\" /* default */](constants[\"a\" /* mainApiConfig */]); // класс валидации попапа регистрации\n\nconst validatorSignup = new FormValidator(selectors[\"a\" /* default */].popupFormSignup, selectors[\"a\" /* default */].validator); // класс валидации попапа авторизации\n\nconst validatorSignin = new FormValidator(selectors[\"a\" /* default */].popupFormSignin, selectors[\"a\" /* default */].validator); // инициализация класса карточки\n\nconst newsCard = new NewsCard(selectors[\"a\" /* default */].cardTemplateMain, mainApi.isLoggedIn, selectors[\"a\" /* default */].newsCard, {\n  addNews: card => {\n    mainApi.postArticle(card).catch(err => console.error(err));\n  },\n  removeNews: cardId => {\n    mainApi.deleteArticle(cardId).catch(err => console.error(err));\n  }\n}); // инициализация формы поиска и раздела новостей\n\nconst searchForm = new SearchForm(selectors[\"a\" /* default */].searchSelector, selectors[\"a\" /* default */].search, {\n  getNews: keyword => {\n    Promise.all([newsApi.getInitialCards(keyword), mainApi.getArticles()]).then(([searchResults, savedCards]) => {\n      // const saved = [];\n      // if (savedCards === undefined ) {\n      //   saved.data = [];\n      // } else {savedCards = saved}\n      searchForm.newsNoResultsCheck(searchResults);\n      const newsSection = new NewsSection[\"a\" /* default */](selectors[\"a\" /* default */].newsSection, keyword, {\n        cardCreator: (data, keyword) => {\n          newsSection.addCard(newsCard.create(data, keyword));\n        },\n        newsToCheck: {\n          savedNews: savedCards === undefined ? saved = [] : savedCards.data,\n          newNews: searchResults.articles\n        }\n      });\n      newsSection.showNews();\n    }).catch(err => console.error(err));\n  }\n}); // класс хедера\n\nconst header = new Header[\"a\" /* default */](selectors[\"a\" /* default */].header, {\n  callback: () => {\n    mainApi.logout().then(() => {\n      mainApi.isLoggedIn = false;\n      localStorage.removeItem('token');\n      document.location.reload();\n    }).catch(err => console.error(err));\n  },\n  popupCallback: () => popupSignin.open(),\n  getInfo: () => {\n    mainApi.getUserInfo().then(res => {\n      // mainApi.isLoggedIn = true;\n      header.render(mainApi.isLoggedIn = true, res.data.name);\n    }).catch(err => {\n      console.error(err);\n    });\n  }\n}); // класс попапа авторизации\n\nconst popupSignin = new PopupSignin_PopupSignin(selectors[\"a\" /* default */].popupAltButton, selectors[\"a\" /* default */].popupFormSignin, {\n  callback: inputs => {\n    mainApi.signIn(inputs[0], inputs[1]).then(res => {\n      localStorage.setItem('token', res.token);\n      mainApi.isLoggedIn = true;\n    }).then(() => {\n      mainApi.getUserInfo().then(res => {\n        header.render(mainApi.isLoggedIn, res.data.name);\n      }).catch(err => {\n        console.error(err);\n      });\n    }).catch(err => console.error(err));\n  },\n  altPopup: evt => {\n    popupSignup.open(evt);\n  }\n});\nconst popupSuccess = new PopupSuccess_PopupSuccess(selectors[\"a\" /* default */].popupAltButton, selectors[\"a\" /* default */].popupFormSignupOk, {\n  altPopup: evt => {\n    popupSignin.open(evt);\n  }\n}); // класс попапа регистрации и успешной регистрации\n\nconst popupSignup = new PopupSignup_PopupSignup(selectors[\"a\" /* default */].popupAltButton, selectors[\"a\" /* default */].popupFormSignup, {\n  callback: inputs => {\n    mainApi.signUp(inputs[0], inputs[1], inputs[2]).then(res => {\n      res.status;\n      res;\n      console.log(res);\n      popupSuccess.open(); // localStorage.setItem('token', res.token);\n      // mainApi.isLoggedIn = true;\n    }) // .then(() => {\n    // mainApi.getUserInfo()\n    // .then((res) => {\n    //   header.render(\n    //     mainApi.isLoggedIn,\n    //     res.data.name,\n    //   );\n    // const popupSuccess = new Popup(selectors.popupFormSignupOk);\n    // popupSuccess.open();\n    // })\n    // .catch((err) => {\n    //   console.error(err);\n    // });\n    // })\n    .catch(err => console.error(err)); // mainApi.signIn(\n    //   inputs[0],\n    //   inputs[1],\n    // )\n  },\n  altPopup: evt => {\n    popupSignin.open(evt);\n  }\n}); // установка слушателя событий на форму поиска\n// проверка токена хедером\n// включение валидации в попапах\n\nsearchForm.setSearchListener();\nheader.tokenCheck(localStorage.getItem('token'));\nvalidatorSignin.enableValidation();\nvalidatorSignup.enableValidation();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///7\n")}]);