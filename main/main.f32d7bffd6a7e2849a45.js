!function(Q){var F={};function B(s){if(F[s])return F[s].exports;var U=F[s]={i:s,l:!1,exports:{}};return Q[s].call(U.exports,U,U.exports,B),U.l=!0,U.exports}B.m=Q,B.c=F,B.d=function(Q,F,s){B.o(Q,F)||Object.defineProperty(Q,F,{enumerable:!0,get:s})},B.r=function(Q){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(Q,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(Q,"__esModule",{value:!0})},B.t=function(Q,F){if(1&F&&(Q=B(Q)),8&F)return Q;if(4&F&&"object"==typeof Q&&Q&&Q.__esModule)return Q;var s=Object.create(null);if(B.r(s),Object.defineProperty(s,"default",{enumerable:!0,value:Q}),2&F&&"string"!=typeof Q)for(var U in Q)B.d(s,U,function(F){return Q[F]}.bind(null,U));return s},B.n=function(Q){var F=Q&&Q.__esModule?function(){return Q.default}:function(){return Q};return B.d(F,"a",F),F},B.o=function(Q,F){return Object.prototype.hasOwnProperty.call(Q,F)},B.p="",B(B.s=8)}([function(module,__webpack_exports__,__webpack_require__){"use strict";eval("/* harmony default export */ __webpack_exports__[\"a\"] = ({\n  // может стоит разбить на 2 - селектор и вэлью, или по-другому\n  searchSelector: document.querySelector('.search-form'),\n  cardTemplateMain: '#cardTemplateMain',\n  cardTemplateSaved: '#cardTemplateSaved',\n  popupFormSignin: document.querySelector('.popup__signin'),\n  popupFormSignup: document.querySelector('.popup__signup'),\n  popupAltButton: '.popup__alternative-button',\n  popupFormSignupOk: document.querySelector('.popup__signup-ok'),\n  search: {\n    results: document.querySelector('.results'),\n    resultsSearching: document.querySelector('.results__loading'),\n    resultsNothing: document.querySelector('.no-results')\n  },\n  header: {\n    headerSaved: '.header-navbar__saved',\n    headerAuth: '.header-navbar__auth',\n    headerName: '.header-navbar__name',\n    headerNameButton: '.header-navbar__menu-item-name',\n    headrbttnLogin: document.querySelector('.header-navbar__menu-item_auth'),\n    headrbttnMobLogin: document.querySelector('.header-mob__menu-item_auth'),\n    headrBttnMobMenuOpen: document.querySelector('.header-navbar__mob-menu-icon'),\n    headrMobClose: document.querySelector('.header-mob__close-icon'),\n    headerMob: document.querySelector('.header-mob')\n  },\n  validator: {\n    popupForm: '.popup__form',\n    popupField: '.popup__input',\n    popupError: '.popup__error',\n    popupSubmit: '.popup__button',\n    popupHide: '.popup__error_hide'\n  },\n  newsSection: {\n    cardGrid: document.querySelector('.result__cards'),\n    showMoreButton: document.querySelector('.results__show-more')\n  },\n  newsCard: {\n    cardReminderSignin: 'Войдите, чтобы сохранять',\n    cardReminderAdd: 'Добавить в избранное',\n    cardReminderRemove: 'Убрать из сохранённых'\n  },\n  infoSaved: {\n    infoTitle: document.querySelector('.info__your-bookmarks'),\n    infoTemplate: '#infoTemplate'\n  }\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvanMvY29uc3RhbnRzL3NlbGVjdG9ycy5qcz9iYWExIl0sIm5hbWVzIjpbInNlYXJjaFNlbGVjdG9yIiwiZG9jdW1lbnQiLCJxdWVyeVNlbGVjdG9yIiwiY2FyZFRlbXBsYXRlTWFpbiIsImNhcmRUZW1wbGF0ZVNhdmVkIiwicG9wdXBGb3JtU2lnbmluIiwicG9wdXBGb3JtU2lnbnVwIiwicG9wdXBBbHRCdXR0b24iLCJwb3B1cEZvcm1TaWdudXBPayIsInNlYXJjaCIsInJlc3VsdHMiLCJyZXN1bHRzU2VhcmNoaW5nIiwicmVzdWx0c05vdGhpbmciLCJoZWFkZXIiLCJoZWFkZXJTYXZlZCIsImhlYWRlckF1dGgiLCJoZWFkZXJOYW1lIiwiaGVhZGVyTmFtZUJ1dHRvbiIsImhlYWRyYnR0bkxvZ2luIiwiaGVhZHJidHRuTW9iTG9naW4iLCJoZWFkckJ0dG5Nb2JNZW51T3BlbiIsImhlYWRyTW9iQ2xvc2UiLCJoZWFkZXJNb2IiLCJ2YWxpZGF0b3IiLCJwb3B1cEZvcm0iLCJwb3B1cEZpZWxkIiwicG9wdXBFcnJvciIsInBvcHVwU3VibWl0IiwicG9wdXBIaWRlIiwibmV3c1NlY3Rpb24iLCJjYXJkR3JpZCIsInNob3dNb3JlQnV0dG9uIiwibmV3c0NhcmQiLCJjYXJkUmVtaW5kZXJTaWduaW4iLCJjYXJkUmVtaW5kZXJBZGQiLCJjYXJkUmVtaW5kZXJSZW1vdmUiLCJpbmZvU2F2ZWQiLCJpbmZvVGl0bGUiLCJpbmZvVGVtcGxhdGUiXSwibWFwcGluZ3MiOiJBQUFlO0FBQ2I7QUFDQUEsZ0JBQWMsRUFBRUMsUUFBUSxDQUFDQyxhQUFULENBQXVCLGNBQXZCLENBRkg7QUFHYkMsa0JBQWdCLEVBQUUsbUJBSEw7QUFJYkMsbUJBQWlCLEVBQUUsb0JBSk47QUFLYkMsaUJBQWUsRUFBRUosUUFBUSxDQUFDQyxhQUFULENBQXVCLGdCQUF2QixDQUxKO0FBTWJJLGlCQUFlLEVBQUVMLFFBQVEsQ0FBQ0MsYUFBVCxDQUF1QixnQkFBdkIsQ0FOSjtBQU9iSyxnQkFBYyxFQUFFLDRCQVBIO0FBUWJDLG1CQUFpQixFQUFFUCxRQUFRLENBQUNDLGFBQVQsQ0FBdUIsbUJBQXZCLENBUk47QUFTYk8sUUFBTSxFQUFFO0FBQ05DLFdBQU8sRUFBRVQsUUFBUSxDQUFDQyxhQUFULENBQXVCLFVBQXZCLENBREg7QUFFTlMsb0JBQWdCLEVBQUVWLFFBQVEsQ0FBQ0MsYUFBVCxDQUF1QixtQkFBdkIsQ0FGWjtBQUdOVSxrQkFBYyxFQUFFWCxRQUFRLENBQUNDLGFBQVQsQ0FBdUIsYUFBdkI7QUFIVixHQVRLO0FBY2JXLFFBQU0sRUFBRTtBQUNOQyxlQUFXLEVBQUUsdUJBRFA7QUFFTkMsY0FBVSxFQUFFLHNCQUZOO0FBR05DLGNBQVUsRUFBRSxzQkFITjtBQUlOQyxvQkFBZ0IsRUFBRSxnQ0FKWjtBQUtOQyxrQkFBYyxFQUFFakIsUUFBUSxDQUFDQyxhQUFULENBQXVCLGdDQUF2QixDQUxWO0FBTU5pQixxQkFBaUIsRUFBRWxCLFFBQVEsQ0FBQ0MsYUFBVCxDQUF1Qiw2QkFBdkIsQ0FOYjtBQU9Oa0Isd0JBQW9CLEVBQUVuQixRQUFRLENBQUNDLGFBQVQsQ0FBdUIsK0JBQXZCLENBUGhCO0FBUU5tQixpQkFBYSxFQUFFcEIsUUFBUSxDQUFDQyxhQUFULENBQXVCLHlCQUF2QixDQVJUO0FBU05vQixhQUFTLEVBQUVyQixRQUFRLENBQUNDLGFBQVQsQ0FBdUIsYUFBdkI7QUFUTCxHQWRLO0FBeUJicUIsV0FBUyxFQUFFO0FBQ1RDLGFBQVMsRUFBRSxjQURGO0FBRVRDLGNBQVUsRUFBRSxlQUZIO0FBR1RDLGNBQVUsRUFBRSxlQUhIO0FBSVRDLGVBQVcsRUFBRSxnQkFKSjtBQUtUQyxhQUFTLEVBQUU7QUFMRixHQXpCRTtBQWdDYkMsYUFBVyxFQUFFO0FBQ1hDLFlBQVEsRUFBRTdCLFFBQVEsQ0FBQ0MsYUFBVCxDQUF1QixnQkFBdkIsQ0FEQztBQUVYNkIsa0JBQWMsRUFBRTlCLFFBQVEsQ0FBQ0MsYUFBVCxDQUF1QixxQkFBdkI7QUFGTCxHQWhDQTtBQW9DYjhCLFVBQVEsRUFBRTtBQUNSQyxzQkFBa0IsRUFBRSwwQkFEWjtBQUVSQyxtQkFBZSxFQUFFLHNCQUZUO0FBR1JDLHNCQUFrQixFQUFFO0FBSFosR0FwQ0c7QUF5Q2JDLFdBQVMsRUFBRTtBQUNUQyxhQUFTLEVBQUVwQyxRQUFRLENBQUNDLGFBQVQsQ0FBdUIsdUJBQXZCLENBREY7QUFFVG9DLGdCQUFZLEVBQUU7QUFGTDtBQXpDRSxDQUFmIiwiZmlsZSI6IjAuanMiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCB7XG4gIC8vINC80L7QttC10YIg0YHRgtC+0LjRgiDRgNCw0LfQsdC40YLRjCDQvdCwIDIgLSDRgdC10LvQtdC60YLQvtGAINC4INCy0Y3Qu9GM0Y4sINC40LvQuCDQv9C+LdC00YDRg9Cz0L7QvNGDXG4gIHNlYXJjaFNlbGVjdG9yOiBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuc2VhcmNoLWZvcm0nKSxcbiAgY2FyZFRlbXBsYXRlTWFpbjogJyNjYXJkVGVtcGxhdGVNYWluJyxcbiAgY2FyZFRlbXBsYXRlU2F2ZWQ6ICcjY2FyZFRlbXBsYXRlU2F2ZWQnLFxuICBwb3B1cEZvcm1TaWduaW46IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5wb3B1cF9fc2lnbmluJyksXG4gIHBvcHVwRm9ybVNpZ251cDogZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnBvcHVwX19zaWdudXAnKSxcbiAgcG9wdXBBbHRCdXR0b246ICcucG9wdXBfX2FsdGVybmF0aXZlLWJ1dHRvbicsXG4gIHBvcHVwRm9ybVNpZ251cE9rOiBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcucG9wdXBfX3NpZ251cC1vaycpLFxuICBzZWFyY2g6IHtcbiAgICByZXN1bHRzOiBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcucmVzdWx0cycpLFxuICAgIHJlc3VsdHNTZWFyY2hpbmc6IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5yZXN1bHRzX19sb2FkaW5nJyksXG4gICAgcmVzdWx0c05vdGhpbmc6IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5uby1yZXN1bHRzJyksXG4gIH0sXG4gIGhlYWRlcjoge1xuICAgIGhlYWRlclNhdmVkOiAnLmhlYWRlci1uYXZiYXJfX3NhdmVkJyxcbiAgICBoZWFkZXJBdXRoOiAnLmhlYWRlci1uYXZiYXJfX2F1dGgnLFxuICAgIGhlYWRlck5hbWU6ICcuaGVhZGVyLW5hdmJhcl9fbmFtZScsXG4gICAgaGVhZGVyTmFtZUJ1dHRvbjogJy5oZWFkZXItbmF2YmFyX19tZW51LWl0ZW0tbmFtZScsXG4gICAgaGVhZHJidHRuTG9naW46IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5oZWFkZXItbmF2YmFyX19tZW51LWl0ZW1fYXV0aCcpLFxuICAgIGhlYWRyYnR0bk1vYkxvZ2luOiBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuaGVhZGVyLW1vYl9fbWVudS1pdGVtX2F1dGgnKSxcbiAgICBoZWFkckJ0dG5Nb2JNZW51T3BlbjogZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmhlYWRlci1uYXZiYXJfX21vYi1tZW51LWljb24nKSxcbiAgICBoZWFkck1vYkNsb3NlOiBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuaGVhZGVyLW1vYl9fY2xvc2UtaWNvbicpLFxuICAgIGhlYWRlck1vYjogZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmhlYWRlci1tb2InKSxcbiAgfSxcbiAgdmFsaWRhdG9yOiB7XG4gICAgcG9wdXBGb3JtOiAnLnBvcHVwX19mb3JtJyxcbiAgICBwb3B1cEZpZWxkOiAnLnBvcHVwX19pbnB1dCcsXG4gICAgcG9wdXBFcnJvcjogJy5wb3B1cF9fZXJyb3InLFxuICAgIHBvcHVwU3VibWl0OiAnLnBvcHVwX19idXR0b24nLFxuICAgIHBvcHVwSGlkZTogJy5wb3B1cF9fZXJyb3JfaGlkZScsXG4gIH0sXG4gIG5ld3NTZWN0aW9uOiB7XG4gICAgY2FyZEdyaWQ6IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5yZXN1bHRfX2NhcmRzJyksXG4gICAgc2hvd01vcmVCdXR0b246IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5yZXN1bHRzX19zaG93LW1vcmUnKSxcbiAgfSxcbiAgbmV3c0NhcmQ6IHtcbiAgICBjYXJkUmVtaW5kZXJTaWduaW46ICfQktC+0LnQtNC40YLQtSwg0YfRgtC+0LHRiyDRgdC+0YXRgNCw0L3Rj9GC0YwnLFxuICAgIGNhcmRSZW1pbmRlckFkZDogJ9CU0L7QsdCw0LLQuNGC0Ywg0LIg0LjQt9Cx0YDQsNC90L3QvtC1JyxcbiAgICBjYXJkUmVtaW5kZXJSZW1vdmU6ICfQo9Cx0YDQsNGC0Ywg0LjQtyDRgdC+0YXRgNCw0L3RkdC90L3Ri9GFJyxcbiAgfSxcbiAgaW5mb1NhdmVkOiB7XG4gICAgaW5mb1RpdGxlOiBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuaW5mb19feW91ci1ib29rbWFya3MnKSxcbiAgICBpbmZvVGVtcGxhdGU6ICcjaW5mb1RlbXBsYXRlJyxcbiAgfVxufVxuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///0\n")},function(module,__webpack_exports__,__webpack_require__){"use strict";eval("/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return mainApiConfig; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return newsApiRequest; });\nconst currentDate = new Date();\nconst monthAgo = `${currentDate.getFullYear()}\n                 -${currentDate.getMonth()}\n                 -${currentDate.getDate() - 30}`;\nconst newsApiConfig = {\n  // const apiKeyAVasi1yevyaru = `7222a165fcf24c058fa185f9541f821b`;\n  apiKeyStayPuft: '6aa47727b1b54808b0244a1d2c266dab',\n  sortBy: 'everything',\n  dateFrom: monthAgo,\n  country: '',\n  category: ''\n};\nconst mainApiConfig = {\n  baseUrl: 'https://api.newsexplorer.nomoredomains.club/',\n  credentialsState: 'include',\n  logoutLink: 'logout/',\n  signInLink: 'signin/',\n  signUpLink: 'signup/',\n  articlesLink: 'articles/',\n  usersLink: 'users/',\n  usersMeLink: 'me/',\n  headers: {\n    'Content-Type': 'application/json'\n  }\n};\nconst newsApiRequest = {\n  baseUrl: 'https://nomoreparties.co/news/v2/top-headlines?' + `${newsApiConfig.country ? `country=${newsApiConfig.country}&` : ''}` + `${newsApiConfig.dateFrom ? `from=${newsApiConfig.dateFrom}&` : ''}` + `${newsApiConfig.sortBy ? `sortBy=${newsApiConfig.sortBy}&` : ''}` + `${newsApiConfig.apiKeyStayPuft ? `apiKey=${newsApiConfig.apiKeyStayPuft}&` : ''}` + `${newsApiConfig.category ? `category=${newsApiConfig.category}&` : ''}`\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvanMvY29uc3RhbnRzL2NvbnN0YW50cy5qcz9lNTUyIl0sIm5hbWVzIjpbImN1cnJlbnREYXRlIiwiRGF0ZSIsIm1vbnRoQWdvIiwiZ2V0RnVsbFllYXIiLCJnZXRNb250aCIsImdldERhdGUiLCJuZXdzQXBpQ29uZmlnIiwiYXBpS2V5U3RheVB1ZnQiLCJzb3J0QnkiLCJkYXRlRnJvbSIsImNvdW50cnkiLCJjYXRlZ29yeSIsIm1haW5BcGlDb25maWciLCJiYXNlVXJsIiwiY3JlZGVudGlhbHNTdGF0ZSIsImxvZ291dExpbmsiLCJzaWduSW5MaW5rIiwic2lnblVwTGluayIsImFydGljbGVzTGluayIsInVzZXJzTGluayIsInVzZXJzTWVMaW5rIiwiaGVhZGVycyIsIm5ld3NBcGlSZXF1ZXN0Il0sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQUEsTUFBTUEsV0FBVyxHQUFHLElBQUlDLElBQUosRUFBcEI7QUFDQSxNQUFNQyxRQUFRLEdBQUksR0FBRUYsV0FBVyxDQUFDRyxXQUFaLEVBQTBCO0FBQzlDLG9CQUFvQkgsV0FBVyxDQUFDSSxRQUFaLEVBQXVCO0FBQzNDLG9CQUFvQkosV0FBVyxDQUFDSyxPQUFaLEtBQXNCLEVBQUcsRUFGN0M7QUFJQSxNQUFNQyxhQUFhLEdBQUc7QUFDcEI7QUFDQUMsZ0JBQWMsRUFBRSxrQ0FGSTtBQUdwQkMsUUFBTSxFQUFFLFlBSFk7QUFJcEJDLFVBQVEsRUFBRVAsUUFKVTtBQUtwQlEsU0FBTyxFQUFFLEVBTFc7QUFNcEJDLFVBQVEsRUFBRTtBQU5VLENBQXRCO0FBU0EsTUFBTUMsYUFBYSxHQUFHO0FBQ3BCQyxTQUFPLEVBQUUsOENBRFc7QUFFcEJDLGtCQUFnQixFQUFFLFNBRkU7QUFHcEJDLFlBQVUsRUFBRSxTQUhRO0FBSXBCQyxZQUFVLEVBQUUsU0FKUTtBQUtwQkMsWUFBVSxFQUFFLFNBTFE7QUFNcEJDLGNBQVksRUFBRSxXQU5NO0FBT3BCQyxXQUFTLEVBQUUsUUFQUztBQVFwQkMsYUFBVyxFQUFFLEtBUk87QUFTcEJDLFNBQU8sRUFBRTtBQUNQLG9CQUFnQjtBQURUO0FBVFcsQ0FBdEI7QUFjQSxNQUFNQyxjQUFjLEdBQUc7QUFDckJULFNBQU8sRUFBRSxvREFDRSxHQUFFUCxhQUFhLENBQUNJLE9BQWQsR0FBeUIsV0FBVUosYUFBYSxDQUFDSSxPQUFRLEdBQXpELEdBQThELEVBQUcsRUFEckUsR0FFRSxHQUFFSixhQUFhLENBQUNHLFFBQWQsR0FBMEIsUUFBT0gsYUFBYSxDQUFDRyxRQUFTLEdBQXhELEdBQTZELEVBQUcsRUFGcEUsR0FHRSxHQUFFSCxhQUFhLENBQUNFLE1BQWQsR0FBd0IsVUFBU0YsYUFBYSxDQUFDRSxNQUFPLEdBQXRELEdBQTJELEVBQUcsRUFIbEUsR0FJRSxHQUFFRixhQUFhLENBQUNDLGNBQWQsR0FBZ0MsVUFBU0QsYUFBYSxDQUFDQyxjQUFlLEdBQXRFLEdBQTJFLEVBQUcsRUFKbEYsR0FLRSxHQUFFRCxhQUFhLENBQUNLLFFBQWQsR0FBMEIsWUFBV0wsYUFBYSxDQUFDSyxRQUFTLEdBQTVELEdBQWlFLEVBQUc7QUFONUQsQ0FBdkIiLCJmaWxlIjoiMS5qcyIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IGN1cnJlbnREYXRlID0gbmV3IERhdGUoKTtcbmNvbnN0IG1vbnRoQWdvID0gYCR7Y3VycmVudERhdGUuZ2V0RnVsbFllYXIoKX1cbiAgICAgICAgICAgICAgICAgLSR7Y3VycmVudERhdGUuZ2V0TW9udGgoKX1cbiAgICAgICAgICAgICAgICAgLSR7Y3VycmVudERhdGUuZ2V0RGF0ZSgpLTMwfWA7XG5cbmNvbnN0IG5ld3NBcGlDb25maWcgPSB7XG4gIC8vIGNvbnN0IGFwaUtleUFWYXNpMXlldnlhcnUgPSBgNzIyMmExNjVmY2YyNGMwNThmYTE4NWY5NTQxZjgyMWJgO1xuICBhcGlLZXlTdGF5UHVmdDogJzZhYTQ3NzI3YjFiNTQ4MDhiMDI0NGExZDJjMjY2ZGFiJyxcbiAgc29ydEJ5OiAnZXZlcnl0aGluZycsXG4gIGRhdGVGcm9tOiBtb250aEFnbyxcbiAgY291bnRyeTogJycsXG4gIGNhdGVnb3J5OiAnJyxcbn07XG5cbmNvbnN0IG1haW5BcGlDb25maWcgPSB7XG4gIGJhc2VVcmw6ICdodHRwczovL2FwaS5uZXdzZXhwbG9yZXIubm9tb3JlZG9tYWlucy5jbHViLycsXG4gIGNyZWRlbnRpYWxzU3RhdGU6ICdpbmNsdWRlJyxcbiAgbG9nb3V0TGluazogJ2xvZ291dC8nLFxuICBzaWduSW5MaW5rOiAnc2lnbmluLycsXG4gIHNpZ25VcExpbms6ICdzaWdudXAvJyxcbiAgYXJ0aWNsZXNMaW5rOiAnYXJ0aWNsZXMvJyxcbiAgdXNlcnNMaW5rOiAndXNlcnMvJyxcbiAgdXNlcnNNZUxpbms6ICdtZS8nLFxuICBoZWFkZXJzOiB7XG4gICAgJ0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uJyxcbiAgfSxcbn07XG5cbmNvbnN0IG5ld3NBcGlSZXF1ZXN0ID0ge1xuICBiYXNlVXJsOiAnaHR0cHM6Ly9ub21vcmVwYXJ0aWVzLmNvL25ld3MvdjIvdG9wLWhlYWRsaW5lcz8nXG4gICAgICAgICAgKyBgJHtuZXdzQXBpQ29uZmlnLmNvdW50cnkgPyBgY291bnRyeT0ke25ld3NBcGlDb25maWcuY291bnRyeX0mYCA6ICcnfWBcbiAgICAgICAgICArIGAke25ld3NBcGlDb25maWcuZGF0ZUZyb20gPyBgZnJvbT0ke25ld3NBcGlDb25maWcuZGF0ZUZyb219JmAgOiAnJ31gXG4gICAgICAgICAgKyBgJHtuZXdzQXBpQ29uZmlnLnNvcnRCeSA/IGBzb3J0Qnk9JHtuZXdzQXBpQ29uZmlnLnNvcnRCeX0mYCA6ICcnfWBcbiAgICAgICAgICArIGAke25ld3NBcGlDb25maWcuYXBpS2V5U3RheVB1ZnQgPyBgYXBpS2V5PSR7bmV3c0FwaUNvbmZpZy5hcGlLZXlTdGF5UHVmdH0mYCA6ICcnfWBcbiAgICAgICAgICArIGAke25ld3NBcGlDb25maWcuY2F0ZWdvcnkgPyBgY2F0ZWdvcnk9JHtuZXdzQXBpQ29uZmlnLmNhdGVnb3J5fSZgIDogJyd9YCxcbn07XG5cbmV4cG9ydCB7IG1haW5BcGlDb25maWcsIG5ld3NBcGlSZXF1ZXN0IH07XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///1\n")},function(module,__webpack_exports__,__webpack_require__){"use strict";eval("/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return NewsSection; });\n// NewsCardList. Класс списка карточек новостей. Конструктор принимает массив карточек, которые должны быть в списке при первой отрисовке. Методы:\n// renderResults принимает массив экземпляров карточек и отрисовывает их;\n// renderLoader отвечает за отрисовку лоудера;\n// renderError принимает объект ошибки и показывает ошибку в интерфейсе;\n// showMore отвечает за функциональность кнопки «Показать ещё»;\n// addCard принимает экземпляр карточки и добавляет её в список.\nclass NewsSection {\n  constructor(newsSection, keyword, {\n    cardCreator,\n    newsToCheck\n  }) {\n    this._container = newsSection.cardGrid;\n    this._showMoreButton = newsSection.showMoreButton;\n    this._keyword = keyword;\n    this._cardCreator = cardCreator;\n    this._newsToCheck = newsToCheck;\n    this._showMoreHandler = this._showMoreLogic.bind(this);\n  }\n\n  showNews() {\n    this._cleanContainer();\n\n    this._checkIfSaved();\n\n    this._checkNewsLength();\n\n    this._moreButtonListener();\n  }\n\n  _checkNewsLength() {\n    if (this._newsToRender.length > 3) {\n      this._showMoreButton.classList.remove('results__show-more_hidden');\n\n      this._newsSlicer();\n    } else {\n      this._showMoreButton.classList.add('results__show-more_hidden');\n\n      this._render(this._newsToRender, this._keyword);\n    }\n  } // добавление одной готовой карточки\n\n\n  addCard(card) {\n    this._container.appendChild(card);\n  }\n\n  removeCard(card) {\n    this._container.removeChild(card);\n  } // отрисовка массива из конструктора\n\n\n  _render(arr, keyword) {\n    for (let i = 0; i < arr.length; i++) {\n      this._cardCreator(arr[i], keyword);\n    }\n  } // рендер трех карточек с обрезкой основного массива\n\n\n  _newsSlicer() {\n    const newsPack = this._newsToRender.slice(0, 3);\n\n    this._newsToRender.splice(0, 3);\n\n    this._render(newsPack, this._keyword);\n  } // логика слушателя\n\n\n  _showMoreLogic(evt) {\n    evt.preventDefault();\n\n    this._checkNewsLength();\n\n    this._newsSlicer();\n\n    this._removeMoreButtonListener();\n\n    this._moreButtonListener();\n  } // установка и удаление слушателей кнопки \"показать еще\"\n\n\n  _moreButtonListener() {\n    this._showMoreButton.addEventListener('click', this._showMoreHandler);\n  }\n\n  _removeMoreButtonListener() {\n    this._showMoreButton.removeEventListener('click', this._showMoreHandler);\n  }\n\n  _cleanContainer() {\n    this._container.innerHTML = '';\n  }\n\n  getInfo() {\n    const arr = [];\n\n    this._newsToRender.forEach(i => arr.push(i.firstElementChild.getAttribute(keyword)));\n\n    console.log(arr);\n  }\n\n  _checkIfSaved() {\n    const newCards = this._newsToCheck.searchResults.articles;\n\n    if (this._newsToCheck.savedCards === undefined) {\n      this._newsToRender = newCards;\n    } else {\n      const savedCards = this._newsToCheck.savedCards.data;\n\n      if (savedCards.length > 0) {\n        newCards.forEach(card => {\n          card.isLiked = savedCards.some(savedCard => savedCard.link == card.url);\n        });\n      }\n\n      this._newsToRender = newCards;\n    }\n  }\n\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///2\n")},function(module,__webpack_exports__,__webpack_require__){"use strict";eval("/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return MainApi; });\n// MainApi. Отвечает за взаимодействие с написанным вами Node.js API. Конструктор этого класса принимает опции, необходимые для инициализации работы с API. Вот список обязательных методов:\n// signup регистрирует нового пользователя;\n// signin аутентифицирует пользователя на основе почты и пароля;\n// getUserData возвращает информацию о пользователе;\n// getArticles забирает все статьи;\n// createArticle создаёт статью;\n// removeArticle удаляет статью.\n// Каждый из методов этих классов возвращает промис, содержит в себе обработку ответа и обязательный блок .catch(), бросающий ошибку дальше с помощью Promise.reject или throw. Также классы MainApi и NewsApi не должны взаимодействовать с DOM напрямую из своих методов.\n\n/* eslint-disable class-methods-use-this */\nclass MainApi {\n  constructor(options) {\n    this.isLoggedIn = false;\n    this.baseUrl = options.baseUrl;\n    this.headers = options.headers;\n    this.credentialsState = options.credentialsState;\n    this.logoutLink = options.logoutLink;\n    this.signInLink = options.signInLink;\n    this.signUpLink = options.signUpLink;\n    this.articlesLink = options.articlesLink;\n    this.usersLink = options.usersLink;\n    this.usersMeLink = options.usersMeLink;\n    this.headersAuth = Object.assign({}, this.headers, {\n      authorization: `Bearer ${localStorage.getItem('token')}`\n    });\n  } // впомогательная функция для запросов на сервер\n  // eslint-disable-next-line consistent-return\n\n\n  async _request(url, method, someHeader, toString) {\n    try {\n      const res = await fetch(this.baseUrl + url, {\n        method,\n        headers: someHeader,\n        credentials: this.credentialsState,\n        // authorization: this.headers.authorization,\n        body: toString ? JSON.stringify(toString) : undefined\n      });\n      if (res.ok) return res.json();\n    } catch (e) {\n      // eslint-disable-next-line no-unused-expressions\n      `error: ${e}`;\n    }\n  }\n\n  signUp(email, password, name) {\n    return this._request(this.signUpLink, 'POST', this.headers, {\n      email,\n      password,\n      name\n    });\n  }\n\n  signIn(email, password) {\n    return this._request(this.signInLink, 'POST', this.headers, {\n      email,\n      password\n    });\n  }\n\n  logout() {\n    return this._request(this.logoutLink, 'POST', this.headers);\n  }\n\n  getArticles() {\n    return this._request(this.articlesLink, 'GET', this.headers);\n  }\n\n  postArticle({\n    keyword,\n    title,\n    text,\n    date,\n    source,\n    link,\n    image\n  }) {\n    return this._request(this.articlesLink, 'POST', this.headers, {\n      keyword,\n      title,\n      text,\n      date,\n      source,\n      link,\n      image\n    });\n  }\n\n  deleteArticle(articleId) {\n    return this._request(this.articlesLink + articleId, 'DELETE', this.headers);\n  }\n\n  getUserInfo() {\n    return this._request(this.usersLink + this.usersMeLink, 'GET', this.headersAuth);\n  }\n\n} // _getResponseData(res) {\n//   if (!res.ok) {\n//     return Promise.resolve(res.json());\n//   }\n//   console.log(res.json);\n//   return res.json();\n// }\n// signUp(email, password, name) {\n//   return fetch(`${this.options.baseUrl}/signup`, {\n//     method: 'POST',\n//     // браузер пошлёт куки в специальном заголовке Cookie вместе с запросом\n//     // credentials: 'include',\n//     headers: {\n//       // authorization: this.options.headers.authorization,\n//       'Content-Type': 'application/json',\n//     },\n//     body: JSON.stringify({\n//       email,\n//       password,\n//       name,\n//     }),\n//   })\n//     .then((res) => this._getResponseData(res));\n//   // .catch((err) => console.log(err, err.name, err.text));\n// }\n// logout() {\n//   return fetch(`${this.options.baseUrl}/logout`, {\n//     method: 'POST',\n//     credentials: 'include',\n//   })\n//     .then((res) => {\n//       if (!res.ok) {\n//         return Promise.resolve(res);\n//       }\n//       return res;\n//     });\n// }\n// signIn(email, password) {\n//   return fetch(`${this.options.baseUrl}/signin`, {\n//     method: 'POST',\n//     headers: {\n//       authorization: this.options.headers.authorization,\n//       'Content-Type': 'application/json',\n//     },\n//     credentials: 'include',\n//     body: JSON.stringify({\n//       email,\n//       password,\n//     }),\n//   })\n//     .then((res) => this._getResponseData(res));\n// }\n// getArticles() {\n//   return fetch(`${this.options.baseUrl}/articles`, {\n//     method: 'GET',\n//     headers: {\n//       authorization: this.options.headers.authorization,\n//     },\n//     credentials: 'include',\n//     withCredentials: true,\n//   })\n//     .then((res) => this._getResponseData(res));\n// }\n//   postArticle(keyword, title, text, date, source, link, image) {\n//     return fetch(`${this.options.baseUrl}/articles`, {\n//       method: 'POST',\n//       headers: {\n//         authorization: this.options.headers.authorization,\n//         'Content-Type': 'application/json',\n//       },\n//       credentials: 'include',\n//       withCredentials: true,\n//       body: JSON.stringify({\n//         keyword,\n//         title,\n//         text,\n//         date,\n//         source,\n//         link,\n//         image,\n//       }),\n//     })\n//       .then((res) => this._getResponseData(res));\n//   }\n//   deleteArticle(articleId) {\n//     return fetch(`${this.options.baseUrl}/articles/${articleId}`, {\n//       method: 'DELETE',\n//       headers: {\n//         authorization: this.options.headers.authorization,\n//       },\n//       credentials: 'include',\n//       withCredentials: true,\n//     }).then((res) => this._getResponseData(res));\n//   }\n//   getUserInfo() {\n//     return fetch(`${this.options.baseUrl}/users/me`, {\n//       method: 'GET',\n//       // сл строчка ведет к проблемам с CORS\n//       credentials: 'include',\n//       withCredentials: true,\n//       headers: {\n//         authorization: this.options.headers.authorization,\n//         'Access-Control-Allow-Origin': '*',\n//       },\n//     })\n//       .then((info) => this._getResponseData(info));\n//   }\n// }\n// signUp(email, password, name) {\n//   return fetch(`${this.options.baseUrl}/signup`, {\n//     method: 'POST',\n//     // браузер пошлёт куки в специальном заголовке Cookie вместе с запросом\n//     // credentials: 'include',\n//     headers: {\n//       // authorization: this.options.headers.authorization,\n//       'Content-Type': 'application/json',\n//     },\n//     body: JSON.stringify({\n//       email,\n//       password,\n//       name,\n//     }),\n//   })\n//     .then((res) => this._getResponseData(res));\n//   // .catch((err) => console.log(err, err.name, err.text));\n// }//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///3\n")},function(module,__webpack_exports__,__webpack_require__){"use strict";eval("/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return Header; });\nclass Header {\n  constructor(header, {\n    callback,\n    popupCallback,\n    getInfo\n  }) {\n    this._headerSaved = document.querySelectorAll(header.headerSaved);\n    this._headerAuth = document.querySelectorAll(header.headerAuth);\n    this._headerName = document.querySelectorAll(header.headerName);\n    this._headerNameButton = document.querySelectorAll(header.headerNameButton);\n    this._callback = callback;\n    this._popupCallback = popupCallback;\n    this._getInfo = getInfo;\n    this._logoutHandler = this._logoutLogic.bind(this);\n    this._headrbttnLogin = header.headrbttnLogin;\n    this._headrbttnMobLogin = header.headrbttnMobLogin;\n    this._headrBttnMobMenuOpen = header.headrBttnMobMenuOpen;\n    this._headrMobClose = header.headrMobClose;\n    this._headerMob = header.headerMob;\n    this._mobMenuHandler = this._mobMenuLogic.bind(this);\n    this._popupOpenHandler = this._popupOpenLogic.bind(this);\n  } //надо накидать слушателей хедера моб - esc и ovarlay\n\n\n  _headerIteratorAdd(selector) {\n    selector.forEach(i => i.classList.add('header-navbar__menu-item_hidden'));\n  }\n\n  _headerIteratorRemove(selector) {\n    selector.forEach(i => i.classList.remove('header-navbar__menu-item_hidden'));\n  }\n\n  render(isLoggedIn, userName) {\n    if (isLoggedIn) {\n      this._headerIteratorAdd(this._headerAuth);\n\n      this._headerIteratorRemove(this._headerSaved);\n\n      this._headerIteratorRemove(this._headerName);\n\n      this._headerNameButton.forEach(i => i.textContent = userName);\n\n      this._logoutListener();\n    } else {\n      this._headerIteratorRemove(this._headerAuth);\n\n      this._headerIteratorAdd(this._headerSaved);\n\n      this._headerIteratorAdd(this._headerName);\n\n      this._headerNameButton.forEach(i => i.textContent = '');\n\n      this._removeLogoutListener();\n    }\n  }\n\n  _setEventListeners() {\n    this._popupOpenListener();\n\n    this._mobMenuListener();\n  }\n\n  tokenCheck(gotToken) {\n    this._setEventListeners();\n\n    if (gotToken) {\n      this._getInfo(gotToken);\n    }\n  } // где лучше расположить?\n\n\n  _removePopupOpenListener() {\n    this._headrbttnLogin.removeEventListener('click', this._popupOpenHandler);\n\n    this._headrbttnMobLogin.removeEventListener('click', this._popupOpenHandler);\n  }\n\n  _popupOpenListener() {\n    this._headrbttnLogin.addEventListener('click', this._popupOpenHandler);\n\n    this._headrbttnMobLogin.addEventListener('click', this._popupOpenHandler);\n  }\n\n  _logoutListener() {\n    this._headerName.forEach(i => i.addEventListener('click', this._logoutHandler));\n  }\n\n  _removeLogoutListener() {\n    this._headerName.forEach(i => i.removeEventListener('click', this._logoutHandler));\n  }\n\n  _logoutLogic() {\n    this._callback();\n\n    this.render(false, '');\n  }\n\n  _popupOpenLogic() {\n    this._popupCallback();\n  }\n\n  _removeMobMenuListener() {\n    this._headrBttnMobMenuOpen.removeEventListener('click', this._mobMenuHandler);\n\n    this._headrMobClose.removeEventListener('click', this._mobMenuHandler);\n  }\n\n  _mobMenuListener() {\n    this._headrBttnMobMenuOpen.addEventListener('click', this._mobMenuHandler);\n\n    this._headrMobClose.addEventListener('click', this._mobMenuHandler);\n  }\n\n  _mobMenuLogic() {\n    this._headerMob.classList.toggle('header-mob_is-opened');\n  }\n\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///4\n")},function(module,__webpack_exports__,__webpack_require__){"use strict";eval("/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return SearchForm; });\nclass SearchForm {\n  // constructor({ searchSelector, callback }) {\n  constructor(searchSelector, search, {\n    getNews\n  }) {\n    this._searchSelector = searchSelector;\n    this._results = search.results;\n    this._resultsNothing = search.resultsNothing;\n    this._resultsSearching = search.resultsSearching;\n    this._getNews = getNews;\n    this._searchHandler = this._searchLogic.bind(this); // this.callback = callback;\n  } // попробовать переделать все открытые-спрятанные окна с помощью модификатора active\n\n\n  setSearchListener() {\n    this._searchSelector.addEventListener('submit', this._searchHandler);\n  }\n\n  _newsSearching() {\n    this._close(this._results);\n\n    this._open(this._resultsSearching);\n\n    this._close(this._resultsNothing); // this._close(this._resultsOk);\n\n  }\n\n  newsFound() {\n    this._open(this._results);\n\n    this._close(this._resultsSearching);\n\n    this._close(this._resultsNothing); // this._open(this._resultsOk);\n\n  }\n\n  newsNoResultsCheck(res) {\n    this.newCards = res.articles;\n\n    if (this.newCards.length === 0 || this.newCards.length === undefined) {\n      this._close(this._results);\n\n      this._close(this._resultsSearching);\n\n      this._open(this._resultsNothing); // this._close(this._resultsOk);\n\n    } else {\n      this._open(this._results); // унифицировать строку\n\n\n      this._results.classList.remove('results_hidden');\n\n      this._close(this._resultsSearching);\n\n      this._close(this._resultsNothing); // this._open(this._resultsOk);\n\n    }\n  }\n\n  startSearch(searchSelector) {\n    searchSelector.addEventListener('submit', evt => {\n      evt.preventDefault();\n\n      this._newsSearching();\n    });\n  }\n\n  _searchLogic(evt) {\n    evt.preventDefault();\n\n    this._newsSearching();\n\n    this._getNews(this._searchSelector.keyword.value);\n  } // eslint-disable-next-line class-methods-use-this\n\n\n  _open(obj) {\n    obj.classList.remove('results__loading_hidden');\n  } // eslint-disable-next-line class-methods-use-this\n\n\n  _close(obj) {\n    obj.classList.add('results__loading_hidden');\n  }\n\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvanMvY29tcG9uZW50cy9TZWFyY2hGb3JtLmpzP2FmZWYiXSwibmFtZXMiOlsiU2VhcmNoRm9ybSIsImNvbnN0cnVjdG9yIiwic2VhcmNoU2VsZWN0b3IiLCJzZWFyY2giLCJnZXROZXdzIiwiX3NlYXJjaFNlbGVjdG9yIiwiX3Jlc3VsdHMiLCJyZXN1bHRzIiwiX3Jlc3VsdHNOb3RoaW5nIiwicmVzdWx0c05vdGhpbmciLCJfcmVzdWx0c1NlYXJjaGluZyIsInJlc3VsdHNTZWFyY2hpbmciLCJfZ2V0TmV3cyIsIl9zZWFyY2hIYW5kbGVyIiwiX3NlYXJjaExvZ2ljIiwiYmluZCIsInNldFNlYXJjaExpc3RlbmVyIiwiYWRkRXZlbnRMaXN0ZW5lciIsIl9uZXdzU2VhcmNoaW5nIiwiX2Nsb3NlIiwiX29wZW4iLCJuZXdzRm91bmQiLCJuZXdzTm9SZXN1bHRzQ2hlY2siLCJyZXMiLCJuZXdDYXJkcyIsImFydGljbGVzIiwibGVuZ3RoIiwidW5kZWZpbmVkIiwiY2xhc3NMaXN0IiwicmVtb3ZlIiwic3RhcnRTZWFyY2giLCJldnQiLCJwcmV2ZW50RGVmYXVsdCIsImtleXdvcmQiLCJ2YWx1ZSIsIm9iaiIsImFkZCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFBZSxNQUFNQSxVQUFOLENBQWlCO0FBQzlCO0FBQ0VDLGFBQVcsQ0FBQ0MsY0FBRCxFQUFpQkMsTUFBakIsRUFBeUI7QUFBQ0M7QUFBRCxHQUF6QixFQUFvQztBQUMvQyxTQUFLQyxlQUFMLEdBQXVCSCxjQUF2QjtBQUNBLFNBQUtJLFFBQUwsR0FBZ0JILE1BQU0sQ0FBQ0ksT0FBdkI7QUFDQSxTQUFLQyxlQUFMLEdBQXVCTCxNQUFNLENBQUNNLGNBQTlCO0FBQ0EsU0FBS0MsaUJBQUwsR0FBeUJQLE1BQU0sQ0FBQ1EsZ0JBQWhDO0FBQ0EsU0FBS0MsUUFBTCxHQUFnQlIsT0FBaEI7QUFDQSxTQUFLUyxjQUFMLEdBQXNCLEtBQUtDLFlBQUwsQ0FBa0JDLElBQWxCLENBQXVCLElBQXZCLENBQXRCLENBTitDLENBTy9DO0FBQ0QsR0FWNkIsQ0FXOUI7OztBQUVBQyxtQkFBaUIsR0FBRztBQUNsQixTQUFLWCxlQUFMLENBQXFCWSxnQkFBckIsQ0FBc0MsUUFBdEMsRUFBZ0QsS0FBS0osY0FBckQ7QUFDRDs7QUFFREssZ0JBQWMsR0FBRztBQUNmLFNBQUtDLE1BQUwsQ0FBWSxLQUFLYixRQUFqQjs7QUFDQSxTQUFLYyxLQUFMLENBQVcsS0FBS1YsaUJBQWhCOztBQUNBLFNBQUtTLE1BQUwsQ0FBWSxLQUFLWCxlQUFqQixFQUhlLENBSWY7O0FBQ0Q7O0FBRURhLFdBQVMsR0FBRztBQUNWLFNBQUtELEtBQUwsQ0FBVyxLQUFLZCxRQUFoQjs7QUFDQSxTQUFLYSxNQUFMLENBQVksS0FBS1QsaUJBQWpCOztBQUNBLFNBQUtTLE1BQUwsQ0FBWSxLQUFLWCxlQUFqQixFQUhVLENBSVY7O0FBQ0Q7O0FBRURjLG9CQUFrQixDQUFDQyxHQUFELEVBQU07QUFDdEIsU0FBS0MsUUFBTCxHQUFnQkQsR0FBRyxDQUFDRSxRQUFwQjs7QUFDQSxRQUFLLEtBQUtELFFBQUwsQ0FBY0UsTUFBZCxLQUF5QixDQUExQixJQUFpQyxLQUFLRixRQUFMLENBQWNFLE1BQWQsS0FBeUJDLFNBQTlELEVBQTBFO0FBQ3hFLFdBQUtSLE1BQUwsQ0FBWSxLQUFLYixRQUFqQjs7QUFDQSxXQUFLYSxNQUFMLENBQVksS0FBS1QsaUJBQWpCOztBQUNBLFdBQUtVLEtBQUwsQ0FBVyxLQUFLWixlQUFoQixFQUh3RSxDQUl4RTs7QUFDRCxLQUxELE1BS087QUFDTCxXQUFLWSxLQUFMLENBQVcsS0FBS2QsUUFBaEIsRUFESyxDQUVMOzs7QUFDQSxXQUFLQSxRQUFMLENBQWNzQixTQUFkLENBQXdCQyxNQUF4QixDQUErQixnQkFBL0I7O0FBQ0EsV0FBS1YsTUFBTCxDQUFZLEtBQUtULGlCQUFqQjs7QUFDQSxXQUFLUyxNQUFMLENBQVksS0FBS1gsZUFBakIsRUFMSyxDQU1MOztBQUNEO0FBQ0Y7O0FBRURzQixhQUFXLENBQUM1QixjQUFELEVBQWlCO0FBQzFCQSxrQkFBYyxDQUFDZSxnQkFBZixDQUFnQyxRQUFoQyxFQUEyQ2MsR0FBRCxJQUFTO0FBQ2pEQSxTQUFHLENBQUNDLGNBQUo7O0FBQ0EsV0FBS2QsY0FBTDtBQUNELEtBSEQ7QUFJRDs7QUFFREosY0FBWSxDQUFDaUIsR0FBRCxFQUFNO0FBQ2hCQSxPQUFHLENBQUNDLGNBQUo7O0FBQ0EsU0FBS2QsY0FBTDs7QUFDQSxTQUFLTixRQUFMLENBQWMsS0FBS1AsZUFBTCxDQUFxQjRCLE9BQXJCLENBQTZCQyxLQUEzQztBQUNELEdBM0Q2QixDQTZENUI7OztBQUNGZCxPQUFLLENBQUNlLEdBQUQsRUFBTTtBQUNUQSxPQUFHLENBQUNQLFNBQUosQ0FBY0MsTUFBZCxDQUFxQix5QkFBckI7QUFDRCxHQWhFNkIsQ0FrRTlCOzs7QUFDQVYsUUFBTSxDQUFDZ0IsR0FBRCxFQUFNO0FBQ1ZBLE9BQUcsQ0FBQ1AsU0FBSixDQUFjUSxHQUFkLENBQWtCLHlCQUFsQjtBQUNEOztBQXJFNkIiLCJmaWxlIjoiNS5qcyIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IGNsYXNzIFNlYXJjaEZvcm0ge1xuICAvLyBjb25zdHJ1Y3Rvcih7IHNlYXJjaFNlbGVjdG9yLCBjYWxsYmFjayB9KSB7XG4gICAgY29uc3RydWN0b3Ioc2VhcmNoU2VsZWN0b3IsIHNlYXJjaCwge2dldE5ld3N9KSB7XG4gICAgdGhpcy5fc2VhcmNoU2VsZWN0b3IgPSBzZWFyY2hTZWxlY3RvcjtcbiAgICB0aGlzLl9yZXN1bHRzID0gc2VhcmNoLnJlc3VsdHM7XG4gICAgdGhpcy5fcmVzdWx0c05vdGhpbmcgPSBzZWFyY2gucmVzdWx0c05vdGhpbmc7XG4gICAgdGhpcy5fcmVzdWx0c1NlYXJjaGluZyA9IHNlYXJjaC5yZXN1bHRzU2VhcmNoaW5nO1xuICAgIHRoaXMuX2dldE5ld3MgPSBnZXROZXdzO1xuICAgIHRoaXMuX3NlYXJjaEhhbmRsZXIgPSB0aGlzLl9zZWFyY2hMb2dpYy5iaW5kKHRoaXMpO1xuICAgIC8vIHRoaXMuY2FsbGJhY2sgPSBjYWxsYmFjaztcbiAgfVxuICAvLyDQv9C+0L/RgNC+0LHQvtCy0LDRgtGMINC/0LXRgNC10LTQtdC70LDRgtGMINCy0YHQtSDQvtGC0LrRgNGL0YLRi9C1LdGB0L/RgNGP0YLQsNC90L3Ri9C1INC+0LrQvdCwINGBINC/0L7QvNC+0YnRjNGOINC80L7QtNC40YTQuNC60LDRgtC+0YDQsCBhY3RpdmVcblxuICBzZXRTZWFyY2hMaXN0ZW5lcigpIHtcbiAgICB0aGlzLl9zZWFyY2hTZWxlY3Rvci5hZGRFdmVudExpc3RlbmVyKCdzdWJtaXQnLCB0aGlzLl9zZWFyY2hIYW5kbGVyKVxuICB9XG5cbiAgX25ld3NTZWFyY2hpbmcoKSB7XG4gICAgdGhpcy5fY2xvc2UodGhpcy5fcmVzdWx0cyk7XG4gICAgdGhpcy5fb3Blbih0aGlzLl9yZXN1bHRzU2VhcmNoaW5nKTtcbiAgICB0aGlzLl9jbG9zZSh0aGlzLl9yZXN1bHRzTm90aGluZyk7XG4gICAgLy8gdGhpcy5fY2xvc2UodGhpcy5fcmVzdWx0c09rKTtcbiAgfVxuXG4gIG5ld3NGb3VuZCgpIHtcbiAgICB0aGlzLl9vcGVuKHRoaXMuX3Jlc3VsdHMpO1xuICAgIHRoaXMuX2Nsb3NlKHRoaXMuX3Jlc3VsdHNTZWFyY2hpbmcpO1xuICAgIHRoaXMuX2Nsb3NlKHRoaXMuX3Jlc3VsdHNOb3RoaW5nKTtcbiAgICAvLyB0aGlzLl9vcGVuKHRoaXMuX3Jlc3VsdHNPayk7XG4gIH1cblxuICBuZXdzTm9SZXN1bHRzQ2hlY2socmVzKSB7XG4gICAgdGhpcy5uZXdDYXJkcyA9IHJlcy5hcnRpY2xlcztcbiAgICBpZiAoKHRoaXMubmV3Q2FyZHMubGVuZ3RoID09PSAwKSB8fCAodGhpcy5uZXdDYXJkcy5sZW5ndGggPT09IHVuZGVmaW5lZCkpIHtcbiAgICAgIHRoaXMuX2Nsb3NlKHRoaXMuX3Jlc3VsdHMpO1xuICAgICAgdGhpcy5fY2xvc2UodGhpcy5fcmVzdWx0c1NlYXJjaGluZyk7XG4gICAgICB0aGlzLl9vcGVuKHRoaXMuX3Jlc3VsdHNOb3RoaW5nKTtcbiAgICAgIC8vIHRoaXMuX2Nsb3NlKHRoaXMuX3Jlc3VsdHNPayk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHRoaXMuX29wZW4odGhpcy5fcmVzdWx0cyk7XG4gICAgICAvLyDRg9C90LjRhNC40YbQuNGA0L7QstCw0YLRjCDRgdGC0YDQvtC60YNcbiAgICAgIHRoaXMuX3Jlc3VsdHMuY2xhc3NMaXN0LnJlbW92ZSgncmVzdWx0c19oaWRkZW4nKTtcbiAgICAgIHRoaXMuX2Nsb3NlKHRoaXMuX3Jlc3VsdHNTZWFyY2hpbmcpO1xuICAgICAgdGhpcy5fY2xvc2UodGhpcy5fcmVzdWx0c05vdGhpbmcpO1xuICAgICAgLy8gdGhpcy5fb3Blbih0aGlzLl9yZXN1bHRzT2spO1xuICAgIH1cbiAgfVxuXG4gIHN0YXJ0U2VhcmNoKHNlYXJjaFNlbGVjdG9yKSB7XG4gICAgc2VhcmNoU2VsZWN0b3IuYWRkRXZlbnRMaXN0ZW5lcignc3VibWl0JywgKGV2dCkgPT4ge1xuICAgICAgZXZ0LnByZXZlbnREZWZhdWx0KCk7XG4gICAgICB0aGlzLl9uZXdzU2VhcmNoaW5nKCk7XG4gICAgfSlcbiAgfVxuXG4gIF9zZWFyY2hMb2dpYyhldnQpIHtcbiAgICBldnQucHJldmVudERlZmF1bHQoKTtcbiAgICB0aGlzLl9uZXdzU2VhcmNoaW5nKCk7XG4gICAgdGhpcy5fZ2V0TmV3cyh0aGlzLl9zZWFyY2hTZWxlY3Rvci5rZXl3b3JkLnZhbHVlKTtcbiAgfVxuXG4gICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGNsYXNzLW1ldGhvZHMtdXNlLXRoaXNcbiAgX29wZW4ob2JqKSB7XG4gICAgb2JqLmNsYXNzTGlzdC5yZW1vdmUoJ3Jlc3VsdHNfX2xvYWRpbmdfaGlkZGVuJyk7XG4gIH1cblxuICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgY2xhc3MtbWV0aG9kcy11c2UtdGhpc1xuICBfY2xvc2Uob2JqKSB7XG4gICAgb2JqLmNsYXNzTGlzdC5hZGQoJ3Jlc3VsdHNfX2xvYWRpbmdfaGlkZGVuJyk7XG4gIH1cbn1cbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///5\n")},function(module,exports,__webpack_require__){eval("// extracted by mini-css-extract-plugin//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvc3R5bGVzL2luZGV4LmNzcz83MzQ4Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBIiwiZmlsZSI6IjYuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBleHRyYWN0ZWQgYnkgbWluaS1jc3MtZXh0cmFjdC1wbHVnaW4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///6\n")},,function(module,__webpack_exports__,__webpack_require__){"use strict";eval("// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n// EXTERNAL MODULE: ./src/styles/index.css\nvar styles = __webpack_require__(6);\n\n// CONCATENATED MODULE: ./src/js/components/NewsCard.js\nclass NewsCard {\n  constructor(cardTemplate, isLoggedIn, newsCard, {\n    removeNews,\n    addNews\n  }) {\n    this._cardTemplate = cardTemplate;\n    this._isLoggedIn = isLoggedIn;\n    this._cardReminderSignin = newsCard.cardReminderSignin;\n    this._cardReminderAdd = newsCard.cardReminderAdd;\n    this._removeNews = removeNews;\n    this._addNews = addNews;\n    this._likeHandler = this._likeLogic.bind(this);\n  }\n\n  _getTemplate() {\n    return document.querySelector(this._cardTemplate).content.cloneNode(true);\n  }\n\n  _chooseReminder() {\n    if (this._isLoggedIn) return this._cardReminderAdd;else return this._cardReminderSignin;\n  }\n\n  create(item, keyword) {\n    this._cardItem = item;\n    this._keyword = keyword;\n    this.date = new Date();\n    this.newCard = this._getTemplate(); // передавать как объект селекторы карточки\n\n    this.newCard.querySelector('.card__login-reminder-text').textContent = this._chooseReminder();\n    this.newCard.querySelector('.card__date').textContent = this.date.toUTCString(item.publishedAt);\n    this.newCard.querySelector('.card__title').textContent = item.title;\n    this.newCard.querySelector('.card__subtitle').textContent = item.description;\n    this.newCard.querySelector('.card__source').textContent = item.source.name;\n    this.newCard.querySelector('.card__img').setAttribute('src', `${item.urlToImage}`); // попробовать без firstElementChild че получится\n\n    this.newCard.firstElementChild.setAttribute('src', `${item.url}`);\n    if (keyword) this.newCard.firstElementChild.setAttribute('keyword', `${keyword}`);\n\n    this._wasSaved();\n\n    this._likeListener();\n\n    return this.newCard;\n  }\n\n  _wasSaved() {\n    if (this._cardItem.isLiked) this.newCard.querySelector('.card__bookmark').classList.add('card__bookmark_logged');\n  }\n\n  _likeListener() {\n    this.newCard.firstElementChild.addEventListener('click', this._likeHandler);\n  }\n\n  _likeLogic(evt) {\n    if (evt.target.classList.contains('card__bookmark_logged') && this._isLoggedIn == true) {\n      evt.target.classList.remove('card__bookmark_logged');\n\n      this._removeNews(this.newCard._id);\n    } else if (evt.target.classList.contains('card__bookmark') && this._isLoggedIn == true) {\n      evt.target.classList.add('card__bookmark_logged');\n\n      this._addNews(this._cardRepack());\n    }\n  }\n\n  _cardRepack() {\n    return this.cardToSave = {\n      keyword: this._keyword,\n      title: this._cardItem.title,\n      text: this._cardItem.description,\n      date: this._cardItem.publishedAt,\n      source: this._cardItem.source.name,\n      link: this._cardItem.url,\n      image: this._cardItem.urlToImage\n    };\n  }\n\n}\n// EXTERNAL MODULE: ./src/js/components/NewsSection.js\nvar NewsSection = __webpack_require__(2);\n\n// EXTERNAL MODULE: ./src/js/api/MainApi.js\nvar MainApi = __webpack_require__(3);\n\n// CONCATENATED MODULE: ./src/js/api/NewsApi.js\n// NewsApi. Отвечает за взаимодействие с NewsAPI. У класса есть конструктор, принимающий опции, и единственный обязательный метод getNews. getNews возвращает список новостей на основе запроса.\n// Каждый из методов этих классов возвращает промис, содержит в себе обработку ответа и обязательный блок .catch(), бросающий ошибку дальше с помощью Promise.reject или throw. Также классы MainApi и NewsApi не должны взаимодействовать с DOM напрямую из своих методов.\nclass NewsApi {\n  constructor(options) {\n    this.baseUrl = options.baseUrl;\n  } // eslint-disable-next-line consistent-return\n\n\n  async getInitialCards(text) {\n    try {\n      const res = await fetch(`${this.baseUrl}q=${text}`, {\n        method: 'GET'\n      });\n      if (res.ok) return res.json();\n    } catch (e) {\n      // eslint-disable-next-line no-unused-expressions\n      `error: ${e}`;\n    }\n  }\n\n}\n// CONCATENATED MODULE: ./src/js/components/FormValidator.js\nclass FormValidator {\n  constructor(popupSelector, validator) {\n    this._popupSelector = popupSelector;\n    this._formElement = this._popupSelector.querySelector(validator.popupForm);\n    this._inputElement = validator.popupField;\n    this._errorElement = validator.popupError;\n    this._errorDisabled = validator.popupHide;\n    this._inputs = Array.from(this._formElement.querySelectorAll(this._inputElement));\n    this._submitButton = this._formElement.querySelector(validator.popupSubmit);\n  }\n\n  enableValidation() {\n    this._formElement.addEventListener('submit', evt => {\n      evt.preventDefault();\n    });\n\n    this._setInputListeners();\n  }\n\n  _setInputListeners() {\n    this._inputs.forEach(input => {\n      input.addEventListener('input', () => {\n        this._isValid(input);\n\n        this._submitButtonToggler(this._formElement);\n      });\n    });\n  }\n\n  _submitButtonToggler() {\n    const submitState = !this._hasInvalidInput(this._formElement);\n\n    if (submitState && !this._isEmpty()) {\n      this._submitButton.classList.add('active');\n    } else {\n      this._submitButton.classList.remove('active');\n    }\n  }\n\n  _openInputError(input) {\n    const errSpan = this._popupSelector.querySelector(`.${input.id}-error`);\n\n    errSpan.textContent = this._checkInputValidity(input, errSpan);\n    errSpan.classList.remove(this._errorDisabled);\n  }\n\n  _checkInputValidity(input, error) {\n    if (input.validity.valueMissing) {\n      return error.textContent = 'Это обязательное поле, господин';\n    }\n\n    if (input.validity.tooShort) {\n      return error.textContent = 'Господин, должно быть от 8 до 30 символов';\n    }\n\n    if (input.validity.tooLong) {\n      return error.textContent = 'Господин, должно быть от 8 до 30 символов';\n    }\n\n    if (input.validity.typeMismatch) {\n      return error.textContent = 'Здесь должен быть email, господин';\n    }\n  }\n\n  _hideInputError(input) {\n    const errSpan = this._popupSelector.querySelector(`.${input.id}-error`);\n\n    errSpan.textContent = '';\n    errSpan.classList.add(this._errorDisabled);\n  }\n\n  _hasInvalidInput() {\n    return this._inputs.some(input => {\n      return !input.validity.valid;\n    });\n  }\n\n  _isEmpty() {\n    return this._inputs.some(input => {\n      return input.value == '';\n    });\n  }\n\n  _isValid(input) {\n    if (!input.validity.valid) {\n      this._openInputError(input);\n    } else {\n      this._hideInputError(input);\n    }\n  }\n\n}\n// CONCATENATED MODULE: ./src/js/components/Popup.js\n// Popup. Класс попапа. Вот его методы:\n// setContent — вставляет в попап содержимое, например, форму входа или сообщение об успешной регистрации;\n// clearContent — очищает содержимое попапа;\n// open — открывает попап;\n// close — закрывает попап.\nclass Popup {\n  constructor(popupSelector) {\n    this._popup = popupSelector;\n    this._closeButton = this._popup.querySelector('.popup__close');\n    this._escCloseHandler = this._escCloseLogic.bind(this);\n    this._overlayCloseHandler = this._overlayCloseLogic.bind(this);\n    this._сloseHandler = this.close.bind(this);\n  }\n\n  open() {\n    this._popup.classList.add('popup_is-opened');\n\n    this._setEventListeners();\n  }\n\n  close() {\n    this._removeEventListeners();\n\n    this._popup.classList.remove('popup_is-opened');\n  }\n\n  _formToggleClass() {\n    this._popup.classList.toggle('popup_is-opened');\n  } // слушатели событий\n\n\n  _listenerCloseButton() {\n    this._closeButton.addEventListener('click', this._сloseHandler);\n  }\n\n  _listenerEscClose() {\n    document.addEventListener('keydown', this._escCloseHandler);\n  }\n\n  _overlayFormListener() {\n    this._popup.addEventListener('click', this._overlayCloseHandler);\n  } // очистка от слушателей событий\n\n\n  _removeListenerCloseButton() {\n    this._closeButton.removeEventListener('click', this._сloseHandler);\n  }\n\n  _removeListenerEscClose() {\n    document.removeEventListener('keydown', this._escCloseHandler);\n  }\n\n  _removeOverlayFormListener() {\n    this._popup.removeEventListener('click', this._overlayCloseHandler);\n  } // логика слушателей событий\n\n\n  _escCloseLogic(evt) {\n    if (evt.key === 'Escape') {\n      this.close();\n    }\n  }\n\n  _overlayCloseLogic(evt) {\n    if (evt.target.classList.contains('overlay')) {\n      this.close();\n    }\n  } // установка и деинсталляция слушателей\n\n\n  _setEventListeners() {\n    this._listenerCloseButton();\n\n    this._listenerEscClose();\n\n    this._overlayFormListener();\n  }\n\n  _removeEventListeners() {\n    this._removeListenerCloseButton();\n\n    this._removeListenerEscClose();\n\n    this._removeOverlayFormListener();\n  }\n\n}\n// CONCATENATED MODULE: ./src/js/components/PopupSuccess.js\n\nclass PopupSuccess_PopupSuccess extends Popup {\n  constructor(popupSelector) {\n    super(popupSelector);\n  }\n\n  open() {\n    super.open(); // this._setEventListeners();\n  }\n\n  close() {\n    super.close();\n  } // _setEventListeners() {\n  //   super._setEventListeners();\n  // }\n\n\n}\n// CONCATENATED MODULE: ./src/js/components/PopupSignin.js\n\nclass PopupSignin_PopupSignin extends Popup {\n  constructor(popupAltButton, popupFormSignin, {\n    callback,\n    altPopup\n  }) {\n    super(popupFormSignin);\n    this._callback = callback;\n    this._altPopup = altPopup;\n    this._inputs = this._popup.querySelectorAll('.popup__input'); // временный селектор, переделать\n\n    this.ppp = document.querySelector('.popup__signin');\n    this._popupAltButton = this.ppp.querySelector(popupAltButton);\n    this._submitHandler = this._submitLogic.bind(this);\n    this._altPopupHandler = this._altPopupLogic.bind(this);\n    this._getInputValuesContext = this._getInputValues();\n    this._submitButton = this._popup.querySelector('.popup__button');\n  }\n\n  open() {\n    super.open();\n\n    this._setEventListeners();\n  }\n\n  close() {\n    super.close();\n\n    this._clearInputValues();\n\n    this._removeEventListeners();\n  } // этот метод нужен?\n\n\n  setInputValues(userData) {\n    this._inputs[0].value = userData.userName;\n    this._inputs[1].value = userData.userJob;\n  }\n\n  _getInputValues() {\n    this._newInputs = [];\n\n    this._inputs.forEach(i => this._newInputs.push(i.value));\n\n    return this._newInputs;\n  }\n\n  _clearInputValues() {\n    this._inputs.forEach(i => i.value === '');\n  } // установка и деинсталляция слушателей\n\n\n  _setEventListeners() {\n    super._setEventListeners();\n\n    this._submitListener();\n\n    this._altPopupListener();\n  }\n\n  _removeEventListeners() {\n    this._removeSubmitListener();\n\n    this._removeAltPopupListener();\n  } // слушатели событий\n\n\n  _submitListener() {\n    this._submitButton.addEventListener('click', this._submitHandler);\n  }\n\n  _altPopupListener() {\n    this._popupAltButton.addEventListener('click', this._altPopupHandler);\n  } // очистка от слушателей событий\n\n\n  _removeAltPopupListener() {\n    this._popupAltButton.removeEventListener('click', this._altPopupHandler);\n  }\n\n  _removeSubmitListener() {\n    this._submitButton.removeEventListener('click', this._submitHandler);\n  } // логика слушателей событий\n\n\n  _submitLogic(evt) {\n    evt.preventDefault();\n\n    if (this._submitButton.classList.contains('active')) {\n      this._callback(this._getInputValues());\n\n      this.close();\n    }\n  }\n\n  _altPopupLogic(evt) {\n    evt.preventDefault();\n    this.close();\n\n    this._altPopup(evt);\n  }\n\n}\n// CONCATENATED MODULE: ./src/js/components/PopupSignup.js\n\nclass PopupSignup_PopupSignup extends Popup {\n  constructor(popupAltButton, popupFormSignup, {\n    callback,\n    altPopup\n  }) {\n    super(popupFormSignup); // this._popupAltButton = popupAltButton;\n\n    this._callback = callback;\n    this._altPopup = altPopup;\n    this.ppp = document.querySelector('.popup__signup');\n    this._inputs = this._popup.querySelectorAll('.popup__input');\n    this._popupAltButton = this.ppp.querySelector(popupAltButton);\n    this._submitHandler = this._submitLogic.bind(this);\n    this._altPopupHandler = this._altPopupLogic.bind(this);\n    this._submitButton = this._popup.querySelector('.popup__button');\n  }\n\n  open() {\n    super.open();\n\n    this._setEventListeners();\n  }\n\n  close() {\n    super.close();\n\n    this._clearInputValues();\n\n    this._removeEventListeners();\n  }\n\n  _getInputValues() {\n    this._newInputs = [];\n\n    this._inputs.forEach(i => this._newInputs.push(i.value));\n\n    return this._newInputs;\n  }\n\n  _clearInputValues() {\n    this._inputs.forEach(i => i.value === '');\n  } // этот метод нужен?\n\n\n  setInputValues(userData) {\n    this._inputs[0].value = userData.userName;\n    this._inputs[1].value = userData.userJob;\n  } // установка и деинсталляция слушателей\n\n\n  _setEventListeners() {\n    super._setEventListeners();\n\n    this._altPopupListener();\n\n    this._submitListener();\n  }\n\n  _removeEventListeners() {\n    this._removeSubmitListener();\n\n    this._removeAltPopupListener();\n  } // слушатели событий\n\n\n  _submitListener() {\n    this._submitButton.addEventListener('click', this._submitHandler);\n  }\n\n  _altPopupListener() {\n    this._popupAltButton.addEventListener('click', this._altPopupHandler);\n  } // очистка от слушателей событий\n\n\n  _removeAltPopupListener() {\n    this._popupAltButton.removeEventListener('click', this._altPopupHandler);\n  }\n\n  _removeSubmitListener() {\n    this._submitButton.removeEventListener('click', this._submitHandler);\n  } // логика слушателей событий\n\n\n  _submitLogic(evt) {\n    evt.preventDefault();\n\n    if (this._submitButton.classList.contains('active')) {\n      this._callback(this._getInputValues());\n\n      this.close();\n    }\n  }\n\n  _altPopupLogic(evt) {\n    evt.preventDefault();\n    this.close();\n\n    this._altPopup(evt);\n  }\n\n}\n// EXTERNAL MODULE: ./src/js/components/Header.js\nvar Header = __webpack_require__(4);\n\n// EXTERNAL MODULE: ./src/js/components/SearchForm.js\nvar SearchForm = __webpack_require__(5);\n\n// EXTERNAL MODULE: ./src/js/constants/selectors.js\nvar selectors = __webpack_require__(0);\n\n// EXTERNAL MODULE: ./src/js/constants/constants.js\nvar constants = __webpack_require__(1);\n\n// CONCATENATED MODULE: ./src/index.js\n\n\n\n\n\n\n\n\n\n\n\n\n\nconst newsApi = new NewsApi(constants[\"b\" /* newsApiRequest */]);\nconst mainApi = new MainApi[\"a\" /* default */](constants[\"a\" /* mainApiConfig */]);\nconst validatorSignup = new FormValidator(selectors[\"a\" /* default */].popupFormSignup, selectors[\"a\" /* default */].validator);\nconst validatorSignin = new FormValidator(selectors[\"a\" /* default */].popupFormSignin, selectors[\"a\" /* default */].validator); // 5. проброс ошибки с сервера\n// 8. логаут в сэйвд -> переход на главную\n// 9. Клик по главная на главной - ничего не происходит, моб меню убрать. Тоже самое на сэйвд\n// 10. проверка нет ли лайкнутых карточек в выдаче\n// 11. кард темплейт в отдельный файл\n// доедлки:\n// попап моб закрытие по оверлею и esc\n// ридми\n// описание автора\n// фавикон\n// всё проверить, почистить, убрать все ост eventListeners\n// дальнейшее развитие - возможность открыть карточку\n\nconst searchForm = new SearchForm[\"a\" /* default */](selectors[\"a\" /* default */].searchSelector, selectors[\"a\" /* default */].search, {\n  getNews: keyword => {\n    Promise.all([mainApi.getArticles(), newsApi.getInitialCards(keyword)]).then(([savedCards, searchResults]) => {\n      searchForm.newsNoResultsCheck(searchResults);\n      const newsSection = new NewsSection[\"a\" /* default */](selectors[\"a\" /* default */].newsSection, keyword, {\n        cardCreator: (data, keyword) => {\n          const newsCard = new NewsCard(selectors[\"a\" /* default */].cardTemplateMain, mainApi.isLoggedIn, selectors[\"a\" /* default */].newsCard, {\n            addNews: card => {\n              mainApi.postArticle(card) // что здесь у джеллу\n              .then(res => {\n                console.log('карточка сохранена');\n              }).catch(err => console.log(err.message));\n            },\n            removeNews: cardId => {\n              mainApi.deleteArticle(cardId).then(res => {\n                console.log('карточка удалена');\n              }).catch(err => console.log(err.message));\n            }\n          });\n          newsSection.addCard(newsCard.create(data, keyword));\n        },\n        newsToCheck: {\n          savedCards,\n          searchResults\n        }\n      });\n      newsSection.showNews();\n    }).catch(err => console.log(err.message));\n  }\n});\nconst header = new Header[\"a\" /* default */](selectors[\"a\" /* default */].header, {\n  callback: () => {\n    mainApi.logout().then(() => {\n      mainApi.isLoggedIn = false;\n      localStorage.removeItem('token'); // console.log('aaaaaaaaaaaaaaaaaaaaaaaaaaaa');\n\n      document.location.reload();\n    }).catch(err => console.log(err));\n  },\n  popupCallback: () => popupSignin.open(),\n  getInfo: () => {\n    mainApi.getUserInfo().then(res => {\n      // mainApi.isLoggedIn = true;\n      header.render(mainApi.isLoggedIn = true, res.data.name);\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n});\nconst popupSignup = new PopupSignup_PopupSignup(selectors[\"a\" /* default */].popupAltButton, selectors[\"a\" /* default */].popupFormSignup, {\n  callback: inputs => {\n    mainApi.signUp(inputs[0], inputs[1], inputs[2]).then(res => {\n      localStorage.setItem('token', res.token);\n      mainApi.isLoggedIn = true;\n      console.log(res.token);\n    }).then(() => {\n      mainApi.getUserInfo().then(res => {\n        header.render(mainApi.isLoggedIn, res.data.name);\n        const popupSuccess = new PopupSuccess_PopupSuccess(selectors[\"a\" /* default */].popupFormSignupOk);\n        popupSuccess.open();\n      }).catch(err => {\n        console.log(err);\n      });\n    }).catch(err => console.log(err));\n    mainApi.signIn(inputs[0], inputs[1]);\n  },\n  altPopup: evt => {\n    popupSignin.open(evt);\n  }\n});\nconst popupSignin = new PopupSignin_PopupSignin(selectors[\"a\" /* default */].popupAltButton, selectors[\"a\" /* default */].popupFormSignin, {\n  callback: inputs => {\n    mainApi.signIn(inputs[0], inputs[1]).then(res => {\n      localStorage.setItem('token', res.token);\n      mainApi.isLoggedIn = true;\n    }).then(() => {\n      mainApi.getUserInfo().then(res => {\n        header.render(mainApi.isLoggedIn, res.data.name);\n      }).catch(err => {\n        console.log(err);\n      });\n    }).catch(err => console.log(err));\n  },\n  altPopup: evt => {\n    popupSignup.open(evt);\n  }\n});\nsearchForm.setSearchListener();\nheader.tokenCheck(localStorage.getItem('token')); // может можно убрать в инициализацию хотя хз\n\nvalidatorSignin.enableValidation();\nvalidatorSignup.enableValidation();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///8\n")}]);